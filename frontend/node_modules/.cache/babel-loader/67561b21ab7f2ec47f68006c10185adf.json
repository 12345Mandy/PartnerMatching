{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17738\\\\Desktop\\\\cs0320\\\\term-project-awhite35-mcamach6-mhe26-pmontei1\\\\frontend\\\\src\\\\Alana_stuff\\\\SurveyAdmin.js\";\nimport Option from \"./Option\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SurveyAdmin(props) {\n  const generatePairs = async () => {\n    let allQuestions = (await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data());\n    let answers = (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data()); // assumes that responses array has the index represent question id and value represent which answer\n    // was picked\n\n    const toSend = {\n      questions: allQuestions,\n      answers: answers\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post(\"http://localhost:4567/match\", toSend, config).then(response => {\n      let resp = response.data[\"pairs\"];\n      console.log(resp);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: generatePairs,\n      children: \"Click for Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SurveyAdmin;\nexport default SurveyAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"SurveyAdmin\");","map":{"version":3,"sources":["C:/Users/17738/Desktop/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/SurveyAdmin.js"],"names":["Option","React","useState","useEffect","axios","Question","SurveyAdmin","props","generatePairs","allQuestions","db","collection","doc","currentPoll","orderBy","get","docs","map","d","data","answers","toSend","questions","config","headers","post","then","response","resp","console","log","catch","error","title"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAIC,YAAY,GAAG,CAAC,MAAMC,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BC,WAA7B,EAA0CF,UAA1C,CAAqD,WAArD,EAAkEG,OAAlE,CAA0E,gBAA1E,EAA4FC,GAA5F,EAAP,EAA0GC,IAA1G,CAA+GC,GAA/G,CAAmHC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAxH,CAAnB;AACA,QAAIC,OAAO,GAAG,CAAC,MAAMV,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BC,WAA7B,EAA0CF,UAA1C,CAAqD,WAArD,EAAkEG,OAAlE,CAA0E,QAA1E,EAAoFC,GAApF,EAAP,EAAkGC,IAAlG,CAAuGC,GAAvG,CAA2GC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAhH,CAAd,CAF8B,CAI9B;AACA;;AACA,UAAME,MAAM,GAAG;AACXC,MAAAA,SAAS,EAAEb,YADA;AAEXW,MAAAA,OAAO,EAAEA;AAFE,KAAf;AAKA,QAAIG,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb;AAOApB,IAAAA,KAAK,CAACqB,IAAN,CACI,6BADJ,EAEIJ,MAFJ,EAGIE,MAHJ,EAIEG,IAJF,CAIOC,QAAQ,IAAI;AACf,UAAIC,IAAI,GAAGD,QAAQ,CAACR,IAAT,CAAc,OAAd,CAAX;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,KARD,EAQGG,KARH,CAQSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAVD;AAWH,GA7BD;;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEzB,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KAxCQF,W;AA0CT,eAAeA,WAAf","sourcesContent":["import Option from \"./Option\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport Question from \"./Question\";\r\n\r\n\r\nfunction SurveyAdmin(props) {\r\n\r\n    const generatePairs = async () => {\r\n        let allQuestions = (await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data());\r\n        let answers = (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data());\r\n\r\n        // assumes that responses array has the index represent question id and value represent which answer\r\n        // was picked\r\n        const toSend = {\r\n            questions: allQuestions,\r\n            answers: answers\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        };\r\n\r\n        axios.post(\r\n            \"http://localhost:4567/match\",\r\n            toSend,\r\n            config\r\n        ).then(response => {\r\n            let resp = response.data[\"pairs\"];\r\n            console.log(resp);\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"poll\">\r\n            <h1>{title}</h1>\r\n            <button type=\"button\" onClick={generatePairs}>Click for Pairs</button>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SurveyAdmin;"]},"metadata":{},"sourceType":"module"}