{"ast":null,"code":"var _jsxFileName = \"/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/DisplayAllSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplaySurvey from \"./DisplaySurvey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayAllSurvey() {\n  _s();\n\n  const [allSurveys, setSurveys] = useState([]);\n  const db = firebase.firestore(); // load in all the surveys.\n\n  const loadInfo = async () => {\n    let temp = []; // Print each document\n\n    const data = await db.collection(\"surveys\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        temp.push(doc);\n      });\n      setSurveys(temp);\n    });\n  }; // on page load, load in the survey\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allSurveys.map(s => {\n      return /*#__PURE__*/_jsxDEV(DisplaySurvey, {\n        data: s.data(),\n        link: s.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DisplayAllSurvey, \"tyS/2o1TsKdTUvDlDlYmp9ajrc0=\");\n\n_c = DisplayAllSurvey;\nexport default DisplayAllSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllSurvey\");","map":{"version":3,"sources":["/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/DisplayAllSurvey.js"],"names":["React","useState","useEffect","useRef","Survey","firebase","Question","DisplaySurvey","DisplayAllSurvey","allSurveys","setSurveys","db","firestore","loadInfo","temp","data","collection","onSnapshot","querySnapshot","forEach","doc","push","map","s","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMU,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX,CAFwB,CAIxB;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAIC,IAAI,GAAG,EAAX,CADyB,CAEzB;;AACA,UAAMC,IAAI,GAAG,MAAMJ,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAqCC,aAAD,IAAmB;AACtEA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3BN,QAAAA,IAAI,CAACO,IAAL,CAAUD,GAAV;AACH,OAFD;AAGAV,MAAAA,UAAU,CAACI,IAAD,CAAV;AACH,KALkB,CAAnB;AAMH,GATD,CALwB,CAgBxB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAKI,sBACI;AAAA,cACKJ,UAAU,CAACa,GAAX,CAAgBC,CAAD,IAAO;AACnB,0BAAQ,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA,CAAC,CAACR,IAAF,EAArB;AAA+B,QAAA,IAAI,EAAEQ,CAAC,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP;;GA9BQhB,gB;;KAAAA,gB;AAgCT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplaySurvey from \"./DisplaySurvey\";\n\nfunction DisplayAllSurvey() {\n    const [allSurveys, setSurveys] = useState([])\n    const db = firebase.firestore();\n\n    // load in all the surveys.\n    const loadInfo = async () => {\n        let temp = []\n        // Print each document\n        const data = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                temp.push(doc)\n            })\n            setSurveys(temp)\n        });\n    }\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadInfo();\n    }, [])\n\n\n        return (\n            <div>\n                {allSurveys.map((s) => {\n                    return (<DisplaySurvey data={s.data()} link={s.id}/>);\n                })}\n            </div>\n        )\n\n}\n\nexport default DisplayAllSurvey;"]},"metadata":{},"sourceType":"module"}