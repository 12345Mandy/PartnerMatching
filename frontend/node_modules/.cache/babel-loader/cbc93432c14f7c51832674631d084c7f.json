{"ast":null,"code":"var _jsxFileName = \"/Users/mandyhe/Grind_Web_Dev/short_React_Firebase_login/login copy/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TextBox from './components/TextBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [visibility, setVisiblity] = useState(\"password\"); // referenced https://www.w3schools.com/howto/howto_js_toggle_password.asp\n\n  function toggleVisibility() {\n    if (visibility === \"password\") {\n      setVisiblity(\"text\");\n    } else {\n      setVisiblity(\"password\");\n    }\n  } // decompose props\n\n\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError\n  } = props; //<TextBox type={\"password\"} id=\"passwordInput\" label={\"Password\"} focus={false} value={password} change={setPassword}/>\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [hasAccount ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        type: \"text\",\n        label: \"Username/Email\",\n        focus: true,\n        value: email,\n        change: setEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        type: visibility,\n        label: \"Password\",\n        focus: false,\n        value: password,\n        change: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"small\",\n        htmlFor: \"showPassword\",\n        children: \"Show Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"small\",\n        type: \"checkbox\",\n        id: \"showPassword\",\n        onClick: () => toggleVisibility()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"small\",\n        htmlFor: \"showPassword\",\n        children: \"Show Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnContainer\",\n        children: hasAccount ?\n        /*#__PURE__*/\n        //hasAccount is true\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignup,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"+oBNBwqX8p3E8u5oeD8N/hgVTGc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mandyhe/Grind_Web_Dev/short_React_Firebase_login/login copy/src/Login.js"],"names":["React","useState","useEffect","TextBox","Login","props","visibility","setVisiblity","toggleVisibility","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextBox from './components/TextBox'\n\n\nconst Login = (props) => {\n    const [visibility, setVisiblity] = useState(\"password\")\n    // referenced https://www.w3schools.com/howto/howto_js_toggle_password.asp\n\n    function toggleVisibility() {\n    if (visibility === \"password\") {\n        setVisiblity(\"text\");\n    } else {\n        setVisiblity(\"password\");\n    }\n    }\n\n    // decompose props\n    const {email,\n      setEmail,\n      password,\n      setPassword,\n      handleLogin,\n      handleSignup,\n      hasAccount,\n      setHasAccount,\n      emailError,\n      passwordError\n    } = props;\n    \n    //<TextBox type={\"password\"} id=\"passwordInput\" label={\"Password\"} focus={false} value={password} change={setPassword}/>\n\n\n    return (\n        <section className = \"login\">\n            <div className = \"loginContainer\">\n                 {hasAccount ? (<h1>Log In</h1>) : (<h1>Sign Up</h1>)}\n                <br></br>\n                <TextBox type={\"text\"} label={\"Username/Email\"} focus={true} value={email} change={setEmail}/>\n                <p className=\"errorMsg\">{emailError}</p>\n                <TextBox type={visibility} label={\"Password\"} focus={false} value={password} change={setPassword}/>\n                 <p className=\"errorMsg\">{passwordError}</p>\n                 <br></br>\n                 <label className=\"small\" htmlFor=\"showPassword\">Show Password</label>\n                 <input className=\"small\" type=\"checkbox\" id=\"showPassword\" onClick={()=>toggleVisibility()}/>\n                 <label className=\"small\" htmlFor=\"showPassword\">Show Password</label>\n                 <div className = \"btnContainer\">\n                     {hasAccount ? (\n                         //hasAccount is true\n                         <>\n                         <button onClick={handleLogin}>Sign in</button>\n                         <p>\n                             Don't have an account ? \n                             <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\n                             </p>\n                         </>\n                     ): (\n                        <>\n                        <button onClick={handleSignup}>Sign up</button>\n                         <p>\n                             Have an account ? \n                             <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\n                        </p>\n                         </>\n                     )}\n                 </div>\n            </div>\n        </section>\n        \n    )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}