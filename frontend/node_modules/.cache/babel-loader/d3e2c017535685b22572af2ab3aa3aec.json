{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17738\\\\Desktop\\\\cs0320\\\\term-project-awhite35-mcamach6-mhe26-pmontei1\\\\frontend\\\\src\\\\Alana_stuff\\\\DisplayAllSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplaySurvey from \"./DisplaySurvey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayAllSurvey() {\n  _s();\n\n  const allSurveys = useRef([]);\n  const db = firebase.firestore(); // load in all the surveys.\n\n  const loadInfo = async () => {\n    let temp = []; // Print each document\n\n    const responses = await db.collection(\"surveys\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        temp.push(doc);\n      });\n    });\n    allSurveys.current = temp;\n    console.log(allSurveys.current);\n  }; // on page load, load in the survey\n\n\n  useEffect(() => {\n    loadInfo();\n    console.log(allSurveys.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allSurveys.current.map(s => /*#__PURE__*/_jsxDEV(DisplaySurvey, {\n      data: s.data(),\n      link: s.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayAllSurvey, \"ZObcLxrbS4VgKoMoV/ZZyISUjU4=\");\n\n_c = DisplayAllSurvey;\nexport default DisplayAllSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllSurvey\");","map":{"version":3,"sources":["C:/Users/17738/Desktop/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/DisplayAllSurvey.js"],"names":["React","useState","useEffect","useRef","Survey","firebase","Question","DisplaySurvey","DisplayAllSurvey","allSurveys","db","firestore","loadInfo","temp","responses","collection","onSnapshot","querySnapshot","forEach","doc","push","current","console","log","map","s","data","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAMC,UAAU,GAAGN,MAAM,CAAC,EAAD,CAAzB;AACA,QAAMO,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX,CAFwB,CAIxB;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAIC,IAAI,GAAG,EAAX,CADyB,CAEzB;;AACA,UAAMC,SAAS,GAAG,MAAMJ,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAqCC,aAAD,IAAmB;AAC3EA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3BN,QAAAA,IAAI,CAACO,IAAL,CAAUD,GAAV;AACH,OAFD;AAGH,KAJuB,CAAxB;AAKAV,IAAAA,UAAU,CAACY,OAAX,GAAqBR,IAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAU,CAACY,OAAvB;AACH,GAVD,CALwB,CAiBxB;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ;AACRU,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAU,CAACY,OAAvB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,cACKZ,UAAU,CAACY,OAAX,CAAmBG,GAAnB,CAAwBC,CAAD,iBACpB,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAF,EAArB;AAA+B,MAAA,IAAI,EAAED,CAAC,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9BQnB,gB;;KAAAA,gB;AAgCT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport Survey from \"./Survey\";\r\nimport firebase from \"firebase\";\r\nimport Question from \"./Question\";\r\nimport DisplaySurvey from \"./DisplaySurvey\";\r\n\r\nfunction DisplayAllSurvey() {\r\n    const allSurveys = useRef([])\r\n    const db = firebase.firestore();\r\n\r\n    // load in all the surveys.\r\n    const loadInfo = async () => {\r\n        let temp = []\r\n        // Print each document\r\n        const responses = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                temp.push(doc)\r\n            })\r\n        });\r\n        allSurveys.current = temp\r\n        console.log(allSurveys.current)\r\n    }\r\n\r\n    // on page load, load in the survey\r\n    useEffect(() => {\r\n        loadInfo();\r\n        console.log(allSurveys.current)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {allSurveys.current.map((s) =>\r\n                <DisplaySurvey data={s.data()} link={s.id}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAllSurvey;"]},"metadata":{},"sourceType":"module"}