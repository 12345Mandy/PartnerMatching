{"ast":null,"code":"var _jsxFileName = \"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport { SidebarData } from './SidebarData';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\"; //import \"./default.png\"\n\nimport logo from \"./default.png\";\nimport ProfilePicDefault from \"./ProfilePicDefault\"; //https://www.youtube.com/watch?v=5R9jFHlG6ik&ab_channel=PedroTech -> css\n//https://www.youtube.com/watch?v=Law7wfdg_ls&ab_channel=DevEd -> routing\n//https://www.youtube.com/watch?v=CXa0f4-dWi4&ab_channel=BrianDesign -> using routing for sidebar\n//https://firebase.google.com/docs/storage/web/download-files -> taking stuff from firebasestorage\n\n/* <div id=\"icon\">{item.icon}</div>\n{\" \"} <div id=\"title\">{item.title}</div> */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(props) {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState(null); //const logo = require('../images/default_profile.png');\n\n  const user = props.user; // const logo = require(user.photoURL);\n  // const storage = firebase.storage().ref()\n\n  let storage = firebase.storage(); // Create a reference to the file we want to download\n\n  let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n  const getDefaultImage = () => {\n    gsReference.getDownloadURL().then(url => {\n      // Insert url into an <img> tag to \"download\"\n      console.log(user.photoURL ? user.photoURL : url);\n      setImageUrl(url); //return <img src={url} alt=\"\"/>;\n    }).catch(error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/object-not-found':\n          // File doesn't exist\n          break;\n\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect the server response\n          break;\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (user.photoURL) {\n      setImageUrl(user.photoURL);\n    } else {\n      setImageUrl(getDefaultImage());\n    }\n  }, []); //<img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"\"/>\n  //<img src = {getDefaultImage()} alt=\"\"/>\n  //<img src={require('./default.png')} alt =\"LOADDDD\"/>\n  //<img src={require(logo)} alt =\"LOADDDD\"/>\n\n  const [currentPage, setCurrentPage] = useState(\"/Homepage\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"LOADDDD\",\n        className: \"profilePic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"SidebarList\",\n      children: SidebarData.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setCurrentPage(item.path),\n          className: item.path === currentPage ? \"rowClicked\" : \"row\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: item.path,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"icon\",\n              children: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"uRd4Y96V22VaCwMS0ss0kmTs3Qg=\");\n\n_c = Sidebar;\nexport default Sidebar;\n{\n  /* <span id=\"icon\">{item.icon}</span>\n  {\" \"} <span id=\"title\">{item.title}</span>  */\n} // <center className=\"profile\">\n//     <img src={logo} alt=\"\"/>\n//     <p>Jessica</p>\n// </center>\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Sidebar.js"],"names":["React","useState","useEffect","SidebarData","Link","firebase","logo","ProfilePicDefault","Sidebar","props","imageUrl","setImageUrl","user","storage","gsReference","refFromURL","getDefaultImage","getDownloadURL","then","url","console","log","photoURL","catch","error","code","currentPage","setCurrentPage","displayName","map","item","index","path","icon","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport { SidebarData } from './SidebarData'\nimport { Link } from 'react-router-dom'\nimport firebase from \"firebase\"\n//import \"./default.png\"\nimport logo from \"./default.png\"\nimport ProfilePicDefault from \"./ProfilePicDefault\";\n\n//https://www.youtube.com/watch?v=5R9jFHlG6ik&ab_channel=PedroTech -> css\n//https://www.youtube.com/watch?v=Law7wfdg_ls&ab_channel=DevEd -> routing\n//https://www.youtube.com/watch?v=CXa0f4-dWi4&ab_channel=BrianDesign -> using routing for sidebar\n//https://firebase.google.com/docs/storage/web/download-files -> taking stuff from firebasestorage\n/* <div id=\"icon\">{item.icon}</div>\n{\" \"} <div id=\"title\">{item.title}</div> */\n\n\n\nfunction Sidebar(props) {\n    const [imageUrl, setImageUrl] = useState(null);\n    //const logo = require('../images/default_profile.png');\n    const user = props.user;\n   // const logo = require(user.photoURL);\n   // const storage = firebase.storage().ref()\n\n    let storage = firebase.storage();\n    // Create a reference to the file we want to download\n    let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n    const getDefaultImage = () => {\n        gsReference.getDownloadURL()\n            .then((url) => {\n                // Insert url into an <img> tag to \"download\"\n                console.log(user.photoURL ? user.photoURL: url)\n                setImageUrl(url);\n                //return <img src={url} alt=\"\"/>;\n            })\n            .catch((error) => {\n                // A full list of error codes is available at\n                // https://firebase.google.com/docs/storage/web/handle-errors\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        // File doesn't exist\n                        break;\n                    case 'storage/unauthorized':\n                        // User doesn't have permission to access the object\n                        break;\n                    case 'storage/canceled':\n                        // User canceled the upload\n                        break;\n                    case 'storage/unknown':\n                        // Unknown error occurred, inspect the server response\n                        break;\n                }\n            });\n    }\n\n    useEffect(() => {\n            if(user.photoURL) {\n                setImageUrl(user.photoURL);\n            } else {\n                setImageUrl(getDefaultImage());\n            }\n        }\n        , []);\n//<img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"\"/>\n    //<img src = {getDefaultImage()} alt=\"\"/>\n    //<img src={require('./default.png')} alt =\"LOADDDD\"/>\n    //<img src={require(logo)} alt =\"LOADDDD\"/>\n\n    const [currentPage, setCurrentPage] = useState(\"/Homepage\");\n    return (\n        <div className=\"Sidebar\">\n            <center className=\"profile\">\n                <img src={imageUrl} alt =\"LOADDDD\" className=\"profilePic\"/>\n                {/*<img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"ahhh\"/>*/}\n                {/*<ProfilePicDefault user={user}/>*/}\n                <h3>{user.displayName}</h3>\n                        <p>{user.displayName}</p>\n             </center>\n             <button>Edit Profile</button>\n             <br/>\n             <br/>\n            <ul className='SidebarList'>\n                {SidebarData.map((item, index) => {\n                    return (\n                        <li key={index} onClick={()=>setCurrentPage(item.path)} className= {item.path === currentPage ? \"rowClicked\" : \"row\"}>\n                            <Link to={item.path}>\n                                <span id=\"icon\">{item.icon}</span>\n                                <span id=\"title\">{item.title}</span>\n                                {/* <div id=\"icon\">{item.icon}</div>\n                                {\" \"} <div id=\"title\">{item.title}</div>    */}\n                            </Link>\n                        </li>\n                    )\n                })\n                    \n                }\n\n            </ul>\n        </div>\n    )\n}\n\nexport default Sidebar\n{/* <span id=\"icon\">{item.icon}</span>\n{\" \"} <span id=\"title\">{item.title}</span>  */}\n\n\n// <center className=\"profile\">\n//     <img src={logo} alt=\"\"/>\n//     <p>Jessica</p>\n// </center>"]},"metadata":{},"sourceType":"module"}