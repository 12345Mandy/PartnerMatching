{"ast":null,"code":"var _jsxFileName = \"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePic = props => {\n  _s();\n\n  const [imageUrl, setImageUrl] = useState(null); //const logo = require('../images/default_profile.png');\n\n  const user = props.user; // const logo = require(user.photoURL);\n  // const storage = firebase.storage().ref()\n\n  let storage = firebase.storage(); // Create a reference to the file we want to download\n\n  let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n  const getDefaultImage = () => {\n    gsReference.getDownloadURL().then(url => {\n      // Insert url into an <img> tag to \"download\"\n      console.log(user.photoURL ? user.photoURL : url);\n      setImageUrl(url); //return <img src={url} alt=\"\"/>;\n    }).catch(error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/object-not-found':\n          // File doesn't exist\n          break;\n\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect the server response\n          break;\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (user.photoURL) {\n      setImageUrl(user.photoURL);\n    } else {\n      setImageUrl(getDefaultImage());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageUrl,\n    alt: \"Profile-pic could not load\",\n    className: \"profilePic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this) // <img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"ahhh\"/>\n  ;\n};\n\n_s(ProfilePic, \"SL08Rt4pXtolfSfte7ehwM433z0=\");\n\n_c = ProfilePic;\nexport default ProfilePic;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePic\");","map":{"version":3,"sources":["/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePic.js"],"names":["React","useState","useEffect","firebase","ProfilePic","props","imageUrl","setImageUrl","user","storage","gsReference","refFromURL","getDefaultImage","getDownloadURL","then","url","console","log","photoURL","catch","error","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC,CAD0B,CAE1B;;AACA,QAAMO,IAAI,GAAGH,KAAK,CAACG,IAAnB,CAH0B,CAI1B;AACA;;AAEA,MAAIC,OAAO,GAAGN,QAAQ,CAACM,OAAT,EAAd,CAP0B,CAQ1B;;AACA,MAAIC,WAAW,GAAGD,OAAO,CAACE,UAAR,CAAmB,uDAAnB,CAAlB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAACG,cAAZ,GACKC,IADL,CACWC,GAAD,IAAS;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,QAAL,GAAgBV,IAAI,CAACU,QAArB,GAA+BH,GAA3C;AACAR,MAAAA,WAAW,CAACQ,GAAD,CAAX,CAHW,CAIX;AACH,KANL,EAOKI,KAPL,CAOYC,KAAD,IAAW;AACd;AACA;AACA,cAAQA,KAAK,CAACC,IAAd;AACI,aAAK,0BAAL;AACI;AACA;;AACJ,aAAK,sBAAL;AACI;AACA;;AACJ,aAAK,kBAAL;AACI;AACA;;AACJ,aAAK,iBAAL;AACI;AACA;AAZR;AAcH,KAxBL;AAyBH,GA1BD;;AA4BAnB,EAAAA,SAAS,CAAC,MAAM;AACR,QAAGM,IAAI,CAACU,QAAR,EAAkB;AACdX,MAAAA,WAAW,CAACC,IAAI,CAACU,QAAN,CAAX;AACH,KAFD,MAEO;AACHX,MAAAA,WAAW,CAACK,eAAe,EAAhB,CAAX;AACH;AACJ,GANI,EAOH,EAPG,CAAT;AAQA,sBACI;AAAK,IAAA,GAAG,EAAEN,QAAV;AAAoB,IAAA,GAAG,EAAE,4BAAzB;AAAsD,IAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AAFJ;AAIH,CAnDD;;GAAMF,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\n\nconst ProfilePic = (props) => {\n    const [imageUrl, setImageUrl] = useState(null);\n    //const logo = require('../images/default_profile.png');\n    const user = props.user;\n    // const logo = require(user.photoURL);\n    // const storage = firebase.storage().ref()\n\n    let storage = firebase.storage();\n    // Create a reference to the file we want to download\n    let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n    const getDefaultImage = () => {\n        gsReference.getDownloadURL()\n            .then((url) => {\n                // Insert url into an <img> tag to \"download\"\n                console.log(user.photoURL ? user.photoURL: url)\n                setImageUrl(url);\n                //return <img src={url} alt=\"\"/>;\n            })\n            .catch((error) => {\n                // A full list of error codes is available at\n                // https://firebase.google.com/docs/storage/web/handle-errors\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        // File doesn't exist\n                        break;\n                    case 'storage/unauthorized':\n                        // User doesn't have permission to access the object\n                        break;\n                    case 'storage/canceled':\n                        // User canceled the upload\n                        break;\n                    case 'storage/unknown':\n                        // Unknown error occurred, inspect the server response\n                        break;\n                }\n            });\n    }\n\n    useEffect(() => {\n            if(user.photoURL) {\n                setImageUrl(user.photoURL);\n            } else {\n                setImageUrl(getDefaultImage());\n            }\n        }\n        , []);\n    return (\n        <img src={imageUrl} alt =\"Profile-pic could not load\" className=\"profilePic\"/>\n        // <img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"ahhh\"/>\n    )\n}\n\nexport default ProfilePic"]},"metadata":{},"sourceType":"module"}