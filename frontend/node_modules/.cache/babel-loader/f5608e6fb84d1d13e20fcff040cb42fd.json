{"ast":null,"code":"var _jsxFileName = \"/Users/mandyhe/Grind_Web_Dev/short_React_Firebase_login/login copy 2/src/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TextBox from './components/TextBox';\nimport PopUp from './components/PopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  // referenced https://www.w3schools.com/howto/howto_js_toggle_password.asp\n  // decompose props\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n    popUpSeen,\n    setPopUpSeen,\n    toggleVisibility,\n    visibility,\n    userName,\n    setUserName,\n    setAgreed\n  } = props; //<TextBox type={\"password\"} id=\"passwordInput\" label={\"Password\"} focus={false} value={password} change={setPassword}/>\n  //<label className=\"small\" htmlFor=\"showPassword\">Show Password</label>\n\n  useEffect(() => {\n    if (popUpSeen) {\n      /*#__PURE__*/\n      _jsxDEV(PopUp, {\n        toggle: props.setPopUpSeen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    return () => {};\n  }, [popUpSeen]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [hasAccount ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        type: \"text\",\n        label: \"Name\",\n        focus: true,\n        value: userName,\n        change: setUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        type: \"text\",\n        label: \"Email\",\n        focus: false,\n        value: email,\n        change: setEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n        type: visibility,\n        label: \"Password\",\n        focus: false,\n        value: password,\n        change: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small\",\n        children: [\"Show Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"showPassword\",\n          onClick: () => toggleVisibility()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnContainer\",\n        children: hasAccount ?\n        /*#__PURE__*/\n        //hasAccount is true\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"I have read and accept the\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setPopUpSeen(true),\n              children: \"Privacy Policy \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: () => setAgreed(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 30\n            }, this), popUpSeen === true ? /*#__PURE__*/_jsxDEV(PopUp, {\n              toggle: props.setPopUpSeen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 50\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignup,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setHasAccount(!hasAccount),\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SignUp;\nexport default SignUp; //  <div>\n//         <div className=\"btn\" onClick={<PopUp toggle={togglePop} /> }>\n//           <button>New User?</button>\n//         </div>\n//       </div>\n//                         <div onClick={()=>{<PopUp/>}} > \n//                             Accept privacy policy.\n//                         </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mandyhe/Grind_Web_Dev/short_React_Firebase_login/login copy 2/src/SignUp.js"],"names":["React","useState","useEffect","TextBox","PopUp","SignUp","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","popUpSeen","setPopUpSeen","toggleVisibility","visibility","userName","setUserName","setAgreed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextBox from './components/TextBox';\nimport PopUp from './components/PopUp';\n\nconst SignUp = (props) => {\n    \n    // referenced https://www.w3schools.com/howto/howto_js_toggle_password.asp\n\n    \n\n   \n    // decompose props\n    const {email,\n      setEmail,\n      password,\n      setPassword,\n      handleLogin,\n      handleSignup,\n      hasAccount,\n      setHasAccount,\n      emailError,\n      passwordError,\n\n       popUpSeen, \n      setPopUpSeen,\n      toggleVisibility,\n      visibility,\n      userName,\n      setUserName,\n      setAgreed\n\n      \n    } = props;\n    \n    //<TextBox type={\"password\"} id=\"passwordInput\" label={\"Password\"} focus={false} value={password} change={setPassword}/>\n//<label className=\"small\" htmlFor=\"showPassword\">Show Password</label>\n\nuseEffect(() => {\n    if(popUpSeen) {\n        <PopUp toggle={props.setPopUpSeen} />\n    }\n    return () => {\n       \n    }\n}, [popUpSeen])\n\n\n    return (\n        <section className = \"login\">\n            <div className = \"loginContainer\">\n                 {hasAccount ? (<h1>Log In</h1>) : (<h1>Sign Up</h1>)}\n                <br></br>\n                <TextBox type={\"text\"} label={\"Name\"} focus={true} value={userName} change={setUserName}/>\n                <TextBox type={\"text\"} label={\"Email\"} focus={false} value={email} change={setEmail}/>\n                <p className=\"errorMsg\">{emailError}</p>\n                <TextBox type={visibility} label={\"Password\"} focus={false} value={password} change={setPassword}/>\n                 <p className=\"errorMsg\">{passwordError}</p>\n                 <br/>\n                 <div className=\"small\">\n                    Show Password: <input  type=\"checkbox\" id=\"showPassword\" onClick={()=>toggleVisibility()}/> \n                 </div>\n                 <div className = \"btnContainer\">\n                     {hasAccount ? (\n                         //hasAccount is true\n                         <>\n                         <button onClick={handleLogin}>Sign in</button>\n                         <p>\n                             Don't have an account ? \n                             <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\n                             </p>\n                         </>\n                     ): (\n                        <>\n                         <p>\n                             \n                             I have read and accept the  \n                             <span onClick={()=>setPopUpSeen(true)}>Privacy Policy </span>\n                             <input  type=\"checkbox\" onClick={() => setAgreed(true)}/> \n                             {popUpSeen===true ? <PopUp toggle={props.setPopUpSeen} /> : null}\n                             \n                        </p>\n                        \n                \n                            \n                        <button onClick={handleSignup}>Sign up</button>\n                         <p>\n                             Have an account ? \n                             <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\n                        </p>\n                         </>\n                     )}\n                 </div>\n            </div>\n        </section>\n        \n    )\n}\nexport default SignUp;\n\n//  <div>\n//         <div className=\"btn\" onClick={<PopUp toggle={togglePop} /> }>\n//           <button>New User?</button>\n//         </div>\n        \n//       </div>\n//                         <div onClick={()=>{<PopUp/>}} > \n//                             Accept privacy policy.\n//                         </div>"]},"metadata":{},"sourceType":"module"}