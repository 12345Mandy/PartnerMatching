{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Question from\"./Question\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import firebase from\"firebase\";import axios from\"axios\";import fire from'../fire';import\"./Survey.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Survey(props){var _useState=useState(\"loading...\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),surveyCreator=_useState4[0],setCreator=_useState4[1];// use this to check if button should show up\nvar _useState5=useState(\"almost there...\"),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),questions=_useState8[0],setQuestions=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),userAnswers=_useState10[0],setUserAnswers=_useState10[1];var db=firebase.firestore();var currentPoll=props.uniqueID;// load in a survey - hardcoded to lab partner survey by default\nvar loadSurvey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var doc,ndoc,answers,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.collection(\"surveys\").doc(currentPoll).get();case 2:doc=_context.sent;setTitle(doc.data().title);setCreator(doc.data().creator);// sets creator --> if current user matches this, display button to get results\nsetDescription(doc.data().description);_context.next=8;return db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get();case 8:ndoc=_context.sent;_context.next=11;return setQuestions(ndoc.docs.map(function(d){return d.data();}));case 11:answers=new Array(ndoc.docs.length);// store answer as -1 if user hasn't answered\nconsole.log(answers.length);for(i=0;i<answers.length;i++){answers[i]=-1;}setUserAnswers(answers);case 15:case\"end\":return _context.stop();}}},_callee);}));return function loadSurvey(){return _ref.apply(this,arguments);};}();var sendResults=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").add({userID:firebase.auth().currentUser.uid,responses:userAnswers});case 2:// should we add a timestamp?\nconsole.log(\"submitted!\");case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function sendResults(){return _ref2.apply(this,arguments);};}();// on page load, load in the survey\nuseEffect(function(){loadSurvey();},[]);// set ID, used in child component\nvar setAnswerFromChild=function setAnswerFromChild(questionID,answer){if(userAnswers){userAnswers[questionID]=answer;}};// attempt to submit survey\nvar submitSurvey=function submitSurvey(){//TODO: obtain a user ID and add that to the submission\nconsole.log(userAnswers);// make sure each answer isn't null\nvar valid=true;for(var i=0;i<userAnswers.length;i++){if(userAnswers[i]===-1){valid=false;}}//TODO: prevent user from submitting duplicates\nif(valid){console.log(\"attemp ting to submit...\");sendResults();}else{// TODO: error message\nconsole.log(\"you didn't pick answer choices :(\");}};var createSurvey=function createSurvey(creator,description,title){db.collection(\"surveys\").doc().set({creator:creator,description:description,title:title}).then(function(){return console.log(\"Created survey!\");}).catch(function(error){console.error(\"Error making survey: \",error);});};// checking if user is admin is hard coded in --> will be used to display button for survey results.\nif(surveyCreator===firebase.auth().currentUser.uid){console.log(db.collection(\"surveys\").doc(currentPoll).id);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"poll\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"surveyInfo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"p\",{children:description})]}),questions.map(function(q,qid){return/*#__PURE__*/_jsx(Question,{options:q.options,question:q.question,id:qid,onSelect:setAnswerFromChild});}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:submitSurvey,children:\"submit\"})]}),/*#__PURE__*/_jsx(Link,{to:\"/ViewResults/\".concat(currentPoll),className:\"poll\",children:\"Check Results -- Generate Pairs\"})]});}else{console.log(\"yes\");console.log(surveyCreator);return/*#__PURE__*/_jsxs(\"div\",{className:\"poll\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"surveyInfo\",children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"p\",{children:description})]}),questions.map(function(q,qid){return/*#__PURE__*/_jsx(Question,{options:q.options,question:q.question,id:qid,onSelect:setAnswerFromChild});}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:submitSurvey,children:\"submit\"})]});}}export default Survey;","map":{"version":3,"sources":["/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/Survey.js"],"names":["Question","React","useState","useEffect","Link","firebase","axios","fire","Survey","props","title","setTitle","surveyCreator","setCreator","description","setDescription","questions","setQuestions","userAnswers","setUserAnswers","db","firestore","currentPoll","uniqueID","loadSurvey","collection","doc","get","data","creator","orderBy","ndoc","docs","map","d","answers","Array","length","console","log","i","sendResults","add","userID","auth","currentUser","uid","responses","setAnswerFromChild","questionID","answer","submitSurvey","valid","createSurvey","set","then","catch","error","id","q","qid","options","question"],"mappings":"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","sourcesContent":["import Question from \"./Question\";\nimport React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport firebase from \"firebase\";\nimport axios from \"axios\";\nimport fire from '../fire'\nimport \"./Survey.css\"\n\nfunction Survey(props) {\n    const [title, setTitle] = useState(\"loading...\");\n    const [surveyCreator, setCreator] = useState(\"\"); // use this to check if button should show up\n    const [description, setDescription] = useState(\"almost there...\");\n    const [questions, setQuestions] = useState([]);\n    const [userAnswers, setUserAnswers] = useState([]);\n\n\n    const db = firebase.firestore();\n    const currentPoll = props.uniqueID;\n\n    // load in a survey - hardcoded to lab partner survey by default\n    const loadSurvey = async () => {\n        const doc = await db.collection(\"surveys\").doc(currentPoll).get();\n        setTitle(doc.data().title);\n        setCreator(doc.data().creator); // sets creator --> if current user matches this, display button to get results\n        setDescription(doc.data().description);\n        const ndoc = await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get();\n        await setQuestions(ndoc.docs.map(d => d.data()));\n        let answers = new Array(ndoc.docs.length);\n        // store answer as -1 if user hasn't answered\n        console.log(answers.length);\n        for (let i = 0; i < answers.length; i++) {\n            answers[i] = -1;\n        }\n        setUserAnswers(answers);\n\n    }\n\n    const sendResults = async () => {\n        // make a new document for submitting\n        // set user ID to be 0 for now\n        await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").add({\n            userID: firebase.auth().currentUser.uid,\n            responses: userAnswers\n        });\n        // should we add a timestamp?\n        console.log(\"submitted!\");\n    }\n\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadSurvey();\n    }, [])\n\n\n    // set ID, used in child component\n    const setAnswerFromChild = (questionID, answer) => {\n        if (userAnswers) {\n            userAnswers[questionID] = answer;\n        }\n    }\n\n    // attempt to submit survey\n    const submitSurvey = () => {\n        //TODO: obtain a user ID and add that to the submission\n        console.log(userAnswers);\n\n        // make sure each answer isn't null\n        let valid = true;\n        for (let i = 0; i < userAnswers.length; i++) {\n            if (userAnswers[i] === -1) {\n                valid = false;\n            }\n        }\n\n        //TODO: prevent user from submitting duplicates\n\n        if (valid) {\n            console.log(\"attemp ting to submit...\");\n            sendResults();\n        } else {\n            // TODO: error message\n            console.log(\"you didn't pick answer choices :(\");\n        }\n    }\n\n    const createSurvey = (creator, description, title) => {\n        db.collection(\"surveys\").doc().set({\n                creator: creator,\n                description: description,\n                title: title\n            }\n        )\n            .then(() => console.log(\"Created survey!\"))\n            .catch((error) => {\n                console.error(\"Error making survey: \", error);\n            });\n    }\n\n    // checking if user is admin is hard coded in --> will be used to display button for survey results.\n    if (surveyCreator === firebase.auth().currentUser.uid) {\n        console.log(db.collection(\"surveys\").doc(currentPoll).id)\n        return (<div>\n                <div className=\"poll\">\n                    <div className=\"surveyInfo\">\n                        <h1>{title}</h1>\n                        <p>{description}</p>\n                    </div>\n                    {questions.map((q, qid) =>\n                        <Question options={q.options} question={q.question} id={qid} onSelect={setAnswerFromChild}/>\n                    )}\n                    <button type=\"button\" onClick={submitSurvey}>submit</button>\n\n                </div>\n                <Link to={`/ViewResults/${currentPoll}`} className=\"poll\">Check Results -- Generate Pairs</Link>\n            </div>\n        )\n    } else {\n        console.log(\"yes\")\n        console.log(surveyCreator)\n        return (\n            <div className=\"poll\">\n                <div className=\"surveyInfo\">\n                    <h1>{title}</h1>\n                    <p>{description}</p>\n                </div>\n                {questions.map((q, qid) =>\n                    <Question options={q.options} question={q.question} id={qid} onSelect={setAnswerFromChild}/>\n                )}\n                <button type=\"button\" onClick={submitSurvey}>submit</button>\n\n            </div>\n        );\n    }\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}