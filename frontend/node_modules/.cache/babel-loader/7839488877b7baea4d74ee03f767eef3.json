{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pedromonteiroborges/Desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Option from\"./Option\";import DisplayPerson from\"./DisplayPerson\";import DisplayPair from\"./DisplayPair.js\";import React,{useState,useEffect,useRef}from'react';import axios from\"axios\";import firebase from\"firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SurveyAdmin(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),surveyCreator=_useState2[0],setCreator=_useState2[1];// use this to check if button should show up\nvar _useState3=useState(\"loading...\"),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),pairs=_useState8[0],setPairs=_useState8[1];var db=firebase.firestore();// EDIT THIS DEPENDING ON WHAT SURVEY IS NEEDED.\nvar currentPoll=props.uniqueID;// on page load, load in the survey\nuseEffect(function(){loadInfo();},[]);var generatePairs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var allQuestions,answers,toSend,config;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get();case 2:allQuestions=_context.sent.docs.map(function(d){return d.data();});_context.next=5;return db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get();case 5:answers=_context.sent.docs.map(function(d){return d.data();});// assumes that responses array has the index represent question id and value represent which answer\n// was picked\ntoSend={questions:allQuestions,answers:answers};config={headers:{\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin':'*'}};axios.post(\"http://localhost:4567/match\",toSend,config).then(function(response){console.log(response.data);setPairs(response.data.pairs);db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\").doc(\"generatedPairs\").set(response.data.pairs);}).catch(function(error){console.log(error);});case 9:case\"end\":return _context.stop();}}},_callee);}));return function generatePairs(){return _ref.apply(this,arguments);};}();// sets any info needed for survey\nvar loadInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var doc,temp,responses;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return db.collection(\"surveys\").doc(currentPoll).get();case 2:doc=_context2.sent;setCreator(doc.data().creator);// sets creator --> if current user matches this, display button to get results\nsetTitle(doc.data().title);temp=[];_context2.next=8;return db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get();case 8:responses=_context2.sent.docs.map(function(d){return d.data();});responses.forEach(function(user){temp.push(user);});setResults(temp);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function loadInfo(){return _ref2.apply(this,arguments);};}();if(surveyCreator===firebase.auth().currentUser.uid){console.log(\"in admin\");return/*#__PURE__*/_jsxs(\"div\",{className:\"poll\",children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"button\",{children:\"Current Survey Results\"}),/*#__PURE__*/_jsx(\"div\",{children:results&&results.map(function(user){return/*#__PURE__*/_jsx(DisplayPerson,{name:user.userID});})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:generatePairs,children:\"Click for Pairs\"}),/*#__PURE__*/_jsx(\"div\",{children:pairs&&Object.entries(pairs).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];return/*#__PURE__*/_jsx(DisplayPair,{user1:key,user2:value});})})]});}else{// console.log(pairs)\n// const getPairs = async () => {\n//     let pairs = await db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n//         .doc(\"generatedPairs\").get().then(snap =>snap.data())\n//    console.log(pairs[0])\n// }\n// getPairs()\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"poll\",children:\"ur not admin\"});}}export default SurveyAdmin;","map":{"version":3,"sources":["/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/SurveyAdmin.js"],"names":["Option","DisplayPerson","DisplayPair","React","useState","useEffect","useRef","axios","firebase","SurveyAdmin","props","surveyCreator","setCreator","title","setTitle","results","setResults","pairs","setPairs","db","firestore","currentPoll","uniqueID","loadInfo","generatePairs","collection","doc","orderBy","get","allQuestions","docs","map","d","data","answers","toSend","questions","config","headers","post","then","response","console","log","set","catch","error","creator","temp","responses","forEach","user","push","auth","currentUser","uid","userID","Object","entries","key","value"],"mappings":"wcACA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,eACYN,QAAQ,CAAC,EAAD,CADpB,wCACjBO,aADiB,eACFC,UADE,eAC0B;AAD1B,eAGER,QAAQ,CAAC,YAAD,CAHV,yCAGjBS,KAHiB,eAGVC,QAHU,8BAIMV,QAAQ,CAAC,EAAD,CAJd,yCAIjBW,OAJiB,eAIRC,UAJQ,8BAKEZ,QAAQ,CAAC,EAAD,CALV,yCAKjBa,KALiB,eAKVC,QALU,eAMxB,GAAMC,CAAAA,EAAE,CAAGX,QAAQ,CAACY,SAAT,EAAX,CACA;AACA,GAAMC,CAAAA,WAAW,CAAGX,KAAK,CAACY,QAA1B,CAEA;AACAjB,SAAS,CAAC,UAAM,CACZkB,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,aAAa,0FAAG,gMACQL,CAAAA,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,WAA7B,EAA0CI,UAA1C,CAAqD,WAArD,EAAkEE,OAAlE,CAA0E,gBAA1E,EAA4FC,GAA5F,EADR,QACdC,YADc,eAC2GC,IAD3G,CACgHC,GADhH,CACoH,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EADrH,wBAEGd,CAAAA,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,WAA7B,EAA0CI,UAA1C,CAAqD,WAArD,EAAkEE,OAAlE,CAA0E,QAA1E,EAAoFC,GAApF,EAFH,QAEdM,OAFc,eAE8FJ,IAF9F,CAEmGC,GAFnG,CAEuG,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EAFxG,EAIlB;AACA;AACME,MANY,CAMH,CACXC,SAAS,CAAEP,YADA,CAEXK,OAAO,CAAEA,OAFE,CANG,CAWdG,MAXc,CAWL,CACTC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,8BAA+B,GAF1B,CADA,CAXK,CAkBlB/B,KAAK,CAACgC,IAAN,CACI,6BADJ,CAEIJ,MAFJ,CAGIE,MAHJ,EAIEG,IAJF,CAIO,SAAAC,QAAQ,CAAI,CACfC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACR,IAArB,EACAf,QAAQ,CAACuB,QAAQ,CAACR,IAAT,CAAchB,KAAf,CAAR,CAEAE,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,WAA7B,EAA0CI,UAA1C,CAAqD,OAArD,EACKC,GADL,CACS,gBADT,EAC2BkB,GAD3B,CAEIH,QAAQ,CAACR,IAAT,CAAchB,KAFlB,EAIH,CAZD,EAYG4B,KAZH,CAYS,SAAAC,KAAK,CAAI,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACH,CAdD,EAlBkB,sDAAH,kBAAbtB,CAAAA,aAAa,0CAAnB,CAmCA;AACA,GAAMD,CAAAA,QAAQ,2FAAG,sLACKJ,CAAAA,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,WAA7B,EAA0CO,GAA1C,EADL,QACPF,GADO,gBAEbd,UAAU,CAACc,GAAG,CAACO,IAAJ,GAAWc,OAAZ,CAAV,CAAgC;AAChCjC,QAAQ,CAACY,GAAG,CAACO,IAAJ,GAAWpB,KAAZ,CAAR,CACImC,IAJS,CAIF,EAJE,wBAMF7B,CAAAA,EAAE,CAACM,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,WAA7B,EAA0CI,UAA1C,CAAqD,WAArD,EAAkEE,OAAlE,CAA0E,QAA1E,EAAoFC,GAApF,EANE,QAKPqB,SALO,gBAMyFnB,IANzF,CAM8FC,GAN9F,CAMkG,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EANnG,EAObgB,SAAS,CAACC,OAAV,CAAkB,SAAAC,IAAI,CAAI,CACtBH,IAAI,CAACI,IAAL,CAAUD,IAAV,EACH,CAFD,EAGAnC,UAAU,CAACgC,IAAD,CAAV,CAVa,yDAAH,kBAARzB,CAAAA,QAAQ,2CAAd,CAcA,GAAIZ,aAAa,GAAKH,QAAQ,CAAC6C,IAAT,GAAgBC,WAAhB,CAA4BC,GAAlD,CAAuD,CACnDb,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,oBAAK9B,KAAL,EADJ,cAEI,kDAFJ,cAGI,qBACKE,OAAO,EAAIA,OAAO,CAACgB,GAAR,CAAY,SAAAoB,IAAI,CAAI,CAC5B,mBAAQ,KAAC,aAAD,EACJ,IAAI,CAAEA,IAAI,CAACK,MADP,EAAR,CAGH,CAJW,CADhB,EAHJ,cAUI,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEhC,aAA/B,6BAVJ,cAWI,qBACKP,KAAK,EAAIwC,MAAM,CAACC,OAAP,CAAezC,KAAf,EAAsBc,GAAtB,CAA0B,eAAkB,mCAAhB4B,GAAgB,UAAXC,KAAW,UAClD,mBAAQ,KAAC,WAAD,EACJ,KAAK,CAAED,GADH,CAEJ,KAAK,CAAEC,KAFH,EAAR,CAIH,CALS,CADd,EAXJ,GADJ,CAsBH,CAxBD,IAwBO,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACI,YAAK,SAAS,CAAC,MAAf,0BADJ,CAmBH,CAEJ,CAGD,cAAenD,CAAAA,WAAf","sourcesContent":["\nimport Option from \"./Option\";\nimport DisplayPerson from \"./DisplayPerson\";\nimport DisplayPair from \"./DisplayPair.js\";\nimport React, {useState, useEffect, useRef} from 'react';\nimport axios from \"axios\";\nimport firebase from \"firebase\";\n\nfunction SurveyAdmin(props) {\n    const [surveyCreator, setCreator] = useState(\"\"); // use this to check if button should show up\n\n    const [title, setTitle] = useState(\"loading...\");\n    const [results, setResults] = useState([])\n    const [pairs, setPairs] = useState([])\n    const db = firebase.firestore();\n    // EDIT THIS DEPENDING ON WHAT SURVEY IS NEEDED.\n    const currentPoll = props.uniqueID;\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadInfo();\n    }, [])\n\n    const generatePairs = async () => {\n        let allQuestions = (await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data());\n        let answers = (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data());\n\n        // assumes that responses array has the index represent question id and value represent which answer\n        // was picked\n        const toSend = {\n            questions: allQuestions,\n            answers: answers\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        };\n\n        axios.post(\n            \"http://localhost:4567/match\",\n            toSend,\n            config\n        ).then(response => {\n            console.log(response.data)\n            setPairs(response.data.pairs)\n\n            db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n                .doc(\"generatedPairs\").set(\n                response.data.pairs\n            )\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    // sets any info needed for survey\n    const loadInfo = async () => {\n        const doc = await db.collection(\"surveys\").doc(currentPoll).get();\n        setCreator(doc.data().creator); // sets creator --> if current user matches this, display button to get results\n        setTitle(doc.data().title);\n        let temp = []\n        const responses =\n            (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data());\n        responses.forEach(user => {\n            temp.push(user)\n        })\n        setResults(temp)\n    }\n\n\n    if (surveyCreator === firebase.auth().currentUser.uid) {\n        console.log(\"in admin\");\n        return (\n            <div className=\"poll\">\n                <h1>{title}</h1>\n                <button>Current Survey Results</button>\n                <div>\n                    {results && results.map(user => {\n                        return (<DisplayPerson\n                            name={user.userID}\n                        />);\n                    })}\n                </div>\n                <button type=\"button\" onClick={generatePairs}>Click for Pairs</button>\n                <div>\n                    {pairs && Object.entries(pairs).map(([key, value]) => {\n                        return (<DisplayPair\n                            user1={key}\n                            user2={value}\n                        />);\n                    })}\n                </div>\n            </div>\n        );\n    } else {\n        // console.log(pairs)\n        // const getPairs = async () => {\n        //     let pairs = await db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n        //         .doc(\"generatedPairs\").get().then(snap =>snap.data())\n        //    console.log(pairs[0])\n        // }\n        // getPairs()\n        return (\n            <div className=\"poll\">\n                {/*<h1>{title}</h1>*/}\n                {/*<button>Your Current Pair</button>*/}\n                {/*<div>*/}\n                {/*    { db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")*/}\n                {/*        .doc(\"generatedPairs\").get().then(snap => snap.exists) &&*/}\n\n                {/*        <div>*/}\n                {/*            You have been paired with:*/}\n                {/*            pairs[0]*/}\n\n                {/*        </div>*/}\n                {/*    }*/}\n\n                {/*</div>*/}\n                ur not admin\n            </div>\n        );\n    }\n\n}\n\n\nexport default SurveyAdmin;"]},"metadata":{},"sourceType":"module"}