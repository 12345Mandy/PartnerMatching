{"ast":null,"code":"var _jsxFileName = \"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePicDefault.js\";\nimport React from 'react';\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePicDefault = props => {\n  const user = props.user; // const logo = require(user.photoURL);\n  // const storage = firebase.storage().ref()\n\n  let storage = firebase.storage(); // Create a reference to the file we want to download\n\n  let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n  const getDefaultImage = () => {\n    gsReference.getDownloadURL().then(url => {\n      // Insert url into an <img> tag to \"download\"\n      console.log(user.photoURL ? user.photoURL : url);\n      return url; //return <img src={url} alt=\"\"/>;\n    }).catch(error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/object-not-found':\n          // File doesn't exist\n          break;\n\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect the server response\n          break;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: require(\"./default.png\"),\n    alt: \"ahhh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) // <img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"ahhh\"/>\n  ;\n};\n\n_c = ProfilePicDefault;\nexport default ProfilePicDefault;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePicDefault\");","map":{"version":3,"sources":["/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePicDefault.js"],"names":["React","firebase","ProfilePicDefault","props","user","storage","gsReference","refFromURL","getDefaultImage","getDownloadURL","then","url","console","log","photoURL","catch","error","code","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB,CADiC,CAEjC;AACA;;AAEA,MAAIC,OAAO,GAAGJ,QAAQ,CAACI,OAAT,EAAd,CALiC,CAMjC;;AACA,MAAIC,WAAW,GAAGD,OAAO,CAACE,UAAR,CAAmB,uDAAnB,CAAlB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAACG,cAAZ,GACKC,IADL,CACWC,GAAD,IAAS;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,QAAL,GAAgBV,IAAI,CAACU,QAArB,GAA+BH,GAA3C;AACA,aAAOA,GAAP,CAHW,CAIX;AACH,KANL,EAOKI,KAPL,CAOYC,KAAD,IAAW;AACd;AACA;AACA,cAAQA,KAAK,CAACC,IAAd;AACI,aAAK,0BAAL;AACI;AACA;;AACJ,aAAK,sBAAL;AACI;AACA;;AACJ,aAAK,kBAAL;AACI;AACA;;AACJ,aAAK,iBAAL;AACI;AACA;AAZR;AAcH,KAxBL;AAyBH,GA1BD;;AA2BA,sBACI;AAAK,IAAA,GAAG,EAAGC,OAAO,CAAC,eAAD,CAAlB;AAAqC,IAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AAFJ;AAIH,CAxCD;;KAAMhB,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\nimport firebase from \"firebase\";\n\nconst ProfilePicDefault = (props) => {\n    const user = props.user;\n    // const logo = require(user.photoURL);\n    // const storage = firebase.storage().ref()\n\n    let storage = firebase.storage();\n    // Create a reference to the file we want to download\n    let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n    const getDefaultImage = () => {\n        gsReference.getDownloadURL()\n            .then((url) => {\n                // Insert url into an <img> tag to \"download\"\n                console.log(user.photoURL ? user.photoURL: url)\n                return url;\n                //return <img src={url} alt=\"\"/>;\n            })\n            .catch((error) => {\n                // A full list of error codes is available at\n                // https://firebase.google.com/docs/storage/web/handle-errors\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        // File doesn't exist\n                        break;\n                    case 'storage/unauthorized':\n                        // User doesn't have permission to access the object\n                        break;\n                    case 'storage/canceled':\n                        // User canceled the upload\n                        break;\n                    case 'storage/unknown':\n                        // Unknown error occurred, inspect the server response\n                        break;\n                }\n            });\n    }\n    return (\n        <img src= {require(\"./default.png\")} alt=\"ahhh\"/>\n        // <img src={user.photoURL ? user.photoURL: getDefaultImage()} alt=\"ahhh\"/>\n    )\n}\n\nexport default ProfilePicDefault"]},"metadata":{},"sourceType":"module"}