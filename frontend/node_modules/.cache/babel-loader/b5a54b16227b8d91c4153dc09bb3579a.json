{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17738\\\\Desktop\\\\cs0320\\\\term-project-awhite35-mcamach6-mhe26-pmontei1\\\\frontend\\\\src\\\\Alana_stuff\\\\DisplayAllSurvey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplaySurvey from \"./DisplaySurvey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayAllSurvey() {\n  _s();\n\n  const [allSurveys, setSurveys] = useState([]);\n  const db = firebase.firestore(); // load in all the surveys.\n\n  const loadInfo = async () => {\n    let temp = []; // Print each document\n\n    const data = await db.collection(\"surveys\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        temp.push(doc);\n      });\n    });\n    setSurveys(temp);\n  }; // on page load, load in the survey\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []);\n\n  if (allSurveys) {\n    console.log(allSurveys);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"All Surveys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), allSurveys && allSurveys.map(s => {\n        return /*#__PURE__*/_jsxDEV(DisplaySurvey, {\n          data: s.data(),\n          link: s.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(DisplayAllSurvey, \"tyS/2o1TsKdTUvDlDlYmp9ajrc0=\");\n\n_c = DisplayAllSurvey;\nexport default DisplayAllSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayAllSurvey\");","map":{"version":3,"sources":["C:/Users/17738/Desktop/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/DisplayAllSurvey.js"],"names":["React","useState","useEffect","useRef","Survey","firebase","Question","DisplaySurvey","DisplayAllSurvey","allSurveys","setSurveys","db","firestore","loadInfo","temp","data","collection","onSnapshot","querySnapshot","forEach","doc","push","console","log","map","s","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMU,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX,CAFwB,CAIxB;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAIC,IAAI,GAAG,EAAX,CADyB,CAEzB;;AACA,UAAMC,IAAI,GAAG,MAAMJ,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAqCC,aAAD,IAAmB;AACtEA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3BN,QAAAA,IAAI,CAACO,IAAL,CAAUD,GAAV;AACH,OAFD;AAGH,KAJkB,CAAnB;AAKAV,IAAAA,UAAU,CAACI,IAAD,CAAV;AACH,GATD,CALwB,CAgBxB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGJ,UAAH,EAAe;AACXa,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,UAAU,IAAIA,UAAU,CAACe,GAAX,CAAgBC,CAAD,IAAO;AACjC,4BAAQ,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEA,CAAC,CAACV,IAAF,EAArB;AAA+B,UAAA,IAAI,EAAEU,CAAC,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFc,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;AAEJ;;GAjCQlB,gB;;KAAAA,gB;AAmCT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport Survey from \"./Survey\";\r\nimport firebase from \"firebase\";\r\nimport Question from \"./Question\";\r\nimport DisplaySurvey from \"./DisplaySurvey\";\r\n\r\nfunction DisplayAllSurvey() {\r\n    const [allSurveys, setSurveys] = useState([])\r\n    const db = firebase.firestore();\r\n\r\n    // load in all the surveys.\r\n    const loadInfo = async () => {\r\n        let temp = []\r\n        // Print each document\r\n        const data = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                temp.push(doc)\r\n            })\r\n        });\r\n        setSurveys(temp)\r\n    }\r\n\r\n    // on page load, load in the survey\r\n    useEffect(() => {\r\n        loadInfo();\r\n    }, [])\r\n\r\n    if(allSurveys) {\r\n        console.log(allSurveys)\r\n        return (\r\n            <div>\r\n                <div>All Surveys</div>\r\n                {allSurveys && allSurveys.map((s) => {\r\n                    return (<DisplaySurvey data={s.data()} link={s.id}/>);\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DisplayAllSurvey;"]},"metadata":{},"sourceType":"module"}