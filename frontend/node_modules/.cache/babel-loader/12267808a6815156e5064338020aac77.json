{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17738\\\\Desktop\\\\cs0320\\\\term-project-awhite35-mcamach6-mhe26-pmontei1\\\\frontend\\\\src\\\\Alana_stuff\\\\DisplayHomeSurveys.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplayCreatorSurvey from \"./DisplayCreatorSurvey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayHomeSurveys() {\n  _s();\n\n  const [allSurveys, setSurveys] = useState([]);\n  const db = firebase.firestore(); // load in all the surveys.\n\n  const loadInfo = async () => {\n    let temp = []; // Print each document\n\n    const data = await db.collection(\"surveys\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (firebase.auth().currentUser.uid === doc.data().creator) temp.push(doc);\n      });\n      setSurveys(temp);\n    });\n  }; // on page load, load in the survey\n\n\n  useEffect(() => {\n    loadInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allSurveys.map(s => {\n      return /*#__PURE__*/_jsxDEV(DisplayCreatorSurvey, {\n        data: s.data(),\n        link: s.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayHomeSurveys, \"tyS/2o1TsKdTUvDlDlYmp9ajrc0=\");\n\n_c = DisplayHomeSurveys;\nexport default DisplayHomeSurveys;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayHomeSurveys\");","map":{"version":3,"sources":["C:/Users/17738/Desktop/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/Alana_stuff/DisplayHomeSurveys.js"],"names":["React","useState","useEffect","useRef","Survey","firebase","Question","DisplayCreatorSurvey","DisplayHomeSurveys","allSurveys","setSurveys","db","firestore","loadInfo","temp","data","collection","onSnapshot","querySnapshot","forEach","doc","auth","currentUser","uid","creator","push","map","s","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMU,EAAE,GAAGN,QAAQ,CAACO,SAAT,EAAX,CAF0B,CAI1B;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAIC,IAAI,GAAG,EAAX,CADyB,CAEzB;;AACA,UAAMC,IAAI,GAAG,MAAMJ,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAqCC,aAAD,IAAmB;AACtEA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3B,YAAGf,QAAQ,CAACgB,IAAT,GAAgBC,WAAhB,CAA4BC,GAA5B,KAAoCH,GAAG,CAACL,IAAJ,GAAWS,OAAlD,EACAV,IAAI,CAACW,IAAL,CAAUL,GAAV;AACH,OAHD;AAIAV,MAAAA,UAAU,CAACI,IAAD,CAAV;AACH,KANkB,CAAnB;AAOH,GAVD,CAL0B,CAiB1B;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA,cACKJ,UAAU,CAACiB,GAAX,CAAgBC,CAAD,IAAO;AACnB,0BAAQ,QAAC,oBAAD;AAAsB,QAAA,IAAI,EAAEA,CAAC,CAACZ,IAAF,EAA5B;AAAsC,QAAA,IAAI,EAAEY,CAAC,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA/BQpB,kB;;KAAAA,kB;AAiCT,eAAeA,kBAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport Survey from \"./Survey\";\r\nimport firebase from \"firebase\";\r\nimport Question from \"./Question\";\r\nimport DisplayCreatorSurvey from \"./DisplayCreatorSurvey\";\r\n\r\nfunction DisplayHomeSurveys() {\r\n    const [allSurveys, setSurveys] = useState([])\r\n    const db = firebase.firestore();\r\n\r\n    // load in all the surveys.\r\n    const loadInfo = async () => {\r\n        let temp = []\r\n        // Print each document\r\n        const data = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                if(firebase.auth().currentUser.uid === doc.data().creator)\r\n                temp.push(doc)\r\n            })\r\n            setSurveys(temp)\r\n        });\r\n    }\r\n\r\n    // on page load, load in the survey\r\n    useEffect(() => {\r\n        loadInfo();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {allSurveys.map((s) => {\r\n                return (<DisplayCreatorSurvey data={s.data()} link={s.id}/>);\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DisplayHomeSurveys;"]},"metadata":{},"sourceType":"module"}