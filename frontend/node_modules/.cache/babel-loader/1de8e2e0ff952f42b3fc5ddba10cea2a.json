{"ast":null,"code":"var _jsxFileName = \"/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlySurvey.js\",\n    _s = $RefreshSig$();\n\nimport Option from \"./Option\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport { Link } from \"react-router-dom\";\nimport ViewOnlyQuestion from \"./ViewOnlyQuestion\";\nimport ResponseComparison from \"./ResponseComparison\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewOnlySurvey(props) {\n  _s();\n\n  const [description, setDescription] = useState(\"almost there...\");\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(\"\");\n  const db = firebase.firestore();\n  useEffect(() => {\n    getSurveyInfoFromDatabase();\n  }, []);\n\n  const getSurveyInfoFromDatabase = async () => {\n    let currentSurveyRef = db.collection(\"surveys\").doc(props.currPoll);\n    setQuestions((await currentSurveyRef.collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"surveyContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"surveyInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Response Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), questions.map((q, qid) => /*#__PURE__*/_jsxDEV(ViewOnlyQuestion, {\n        userData: props.userData,\n        partnerData: props.partnerData,\n        options: q.options,\n        question: q.question,\n        questionNumber: q.questionnumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewOnlySurvey, \"IY9GoroinasSh0r5XleAA6pafkU=\");\n\n_c = ViewOnlySurvey;\nexport default ViewOnlySurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOnlySurvey\");","map":{"version":3,"sources":["/Users/pedromonteiroborges/Desktop/CS32/Projects/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlySurvey.js"],"names":["Option","React","useEffect","useState","firebase","Question","Link","ViewOnlyQuestion","ResponseComparison","ViewOnlySurvey","props","description","setDescription","questions","setQuestions","error","setError","db","firestore","getSurveyInfoFromDatabase","currentSurveyRef","collection","doc","currPoll","orderBy","get","docs","map","d","data","q","qid","userData","partnerData","options","question","questionnumber"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,iBAAD,CAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMc,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,yBAAyB;AAC5B,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,yBAAyB,GAAG,YAAY;AAC1C,QAAIC,gBAAgB,GAAGH,EAAE,CAACI,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BZ,KAAK,CAACa,QAAnC,CAAvB;AAEAT,IAAAA,YAAY,CAAC,CAAC,MAAMM,gBAAgB,CAACC,UAAjB,CAA4B,WAA5B,EAAyCG,OAAzC,CAAiD,gBAAjD,EAAmEC,GAAnE,EAAP,EAAiFC,IAAjF,CAAsFC,GAAtF,CAA0FC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAA/F,CAAD,CAAZ;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKE,SAAS,CAACc,GAAV,CAAc,CAACG,CAAD,EAAIC,GAAJ,kBACX,QAAC,gBAAD;AACI,QAAA,QAAQ,EAAErB,KAAK,CAACsB,QADpB;AAC8B,QAAA,WAAW,EAAEtB,KAAK,CAACuB,WADjD;AAEI,QAAA,OAAO,EAAEH,CAAC,CAACI,OAFf;AAEwB,QAAA,QAAQ,EAAEJ,CAAC,CAACK,QAFpC;AAE8C,QAAA,cAAc,EAAEL,CAAC,CAACM;AAFhE;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAjCQ3B,c;;KAAAA,c;AAmCT,eAAeA,cAAf","sourcesContent":["import Option from \"./Option\";\nimport React, {useEffect, useState} from \"react\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport {Link} from \"react-router-dom\";\n\nimport ViewOnlyQuestion from \"./ViewOnlyQuestion\";\nimport ResponseComparison from \"./ResponseComparison\";\n\nfunction ViewOnlySurvey(props) {\n    const [description, setDescription] = useState(\"almost there...\");\n    const [questions, setQuestions] = useState([]);\n\n    const [error, setError] = useState(\"\");\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        getSurveyInfoFromDatabase();\n    }, [])\n\n    const getSurveyInfoFromDatabase = async () => {\n        let currentSurveyRef = db.collection(\"surveys\").doc(props.currPoll);\n\n        setQuestions((await currentSurveyRef.collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data()));\n    }\n\n    return (\n        <div className=\"surveyContainer\">\n            <div className=\"poll\">\n                <div className=\"surveyInfo\">\n                    <h1>Response Comparison</h1>\n                    <p>{description}</p>\n                </div>\n                {questions.map((q, qid) =>\n                    <ViewOnlyQuestion\n                        userData={props.userData} partnerData={props.partnerData}\n                        options={q.options} question={q.question} questionNumber={q.questionnumber}/>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default ViewOnlySurvey;"]},"metadata":{},"sourceType":"module"}