[{"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/index.js":"1","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/App.js":"2","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/fire.js":"3","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Nav.js":"4","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/Homepage.js":"5","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Sidebar.js":"6","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/ViewResults.js":"7","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/TakeSurvey.js":"8","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/EditProfile.js":"9","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/StartPage.js":"10","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/SurveyCreator.js":"11","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Survey.js":"12","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/NewSurvey.js":"13","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/SidebarData.js":"14","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayHomeSurveys.js":"15","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/PopUp.js":"16","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePic.js":"17","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayAllSurvey.js":"18","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/TextBox.js":"19","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/SurveyAdmin.js":"20","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/NewQuestionButton.js":"21","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/QuestionEntry.js":"22","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/GeneratedLink.js":"23","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Question.js":"24","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/SurveyInfoBox.js":"25","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayPair.js":"26","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayPerson.js":"27","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplaySurvey.js":"28","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayCreatorSurvey.js":"29","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/UserDisplayPair.js":"30","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/AnswerBox.js":"31","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/NewAnswerButton.js":"32","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Option.js":"33","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlySurvey.js":"34","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ResponseComparison.js":"35","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlyQuestion.js":"36","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlyOption.js":"37","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/PopUpText.js":"38","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/BrowseSurveys.js":"39"},{"size":441,"mtime":1618607889250,"results":"40","hashOfConfig":"41"},{"size":4928,"mtime":1618717098984,"results":"42","hashOfConfig":"41"},{"size":571,"mtime":1618607889249,"results":"43","hashOfConfig":"41"},{"size":266,"mtime":1618607889241,"results":"44","hashOfConfig":"41"},{"size":361,"mtime":1618716237941,"results":"45","hashOfConfig":"41"},{"size":1738,"mtime":1618697592707,"results":"46","hashOfConfig":"41"},{"size":347,"mtime":1618717775644,"results":"47","hashOfConfig":"41"},{"size":357,"mtime":1618717270862,"results":"48","hashOfConfig":"41"},{"size":7949,"mtime":1618763560590,"results":"49","hashOfConfig":"41"},{"size":3902,"mtime":1618697642582,"results":"50","hashOfConfig":"41"},{"size":5133,"mtime":1618607889248,"results":"51","hashOfConfig":"41"},{"size":4578,"mtime":1618716629132,"results":"52","hashOfConfig":"41"},{"size":434,"mtime":1618607889241,"results":"53","hashOfConfig":"41"},{"size":357,"mtime":1618698642164,"results":"54","hashOfConfig":"41"},{"size":1089,"mtime":1618683286946,"results":"55","hashOfConfig":"41"},{"size":506,"mtime":1618687550832,"results":"56","hashOfConfig":"41"},{"size":2278,"mtime":1618697035369,"results":"57","hashOfConfig":"41"},{"size":1040,"mtime":1618683286947,"results":"58","hashOfConfig":"41"},{"size":629,"mtime":1618697592712,"results":"59","hashOfConfig":"41"},{"size":7718,"mtime":1618696370352,"results":"60","hashOfConfig":"41"},{"size":178,"mtime":1618607889248,"results":"61","hashOfConfig":"41"},{"size":1007,"mtime":1618607889248,"results":"62","hashOfConfig":"41"},{"size":385,"mtime":1618607889248,"results":"63","hashOfConfig":"41"},{"size":691,"mtime":1618683286944,"results":"64","hashOfConfig":"41"},{"size":199,"mtime":1618607889248,"results":"65","hashOfConfig":"41"},{"size":199,"mtime":1618683286946,"results":"66","hashOfConfig":"41"},{"size":189,"mtime":1618717386250,"results":"67","hashOfConfig":"41"},{"size":520,"mtime":1618683286945,"results":"68","hashOfConfig":"41"},{"size":531,"mtime":1618683286947,"results":"69","hashOfConfig":"41"},{"size":828,"mtime":1618683286803,"results":"70","hashOfConfig":"41"},{"size":261,"mtime":1618607889248,"results":"71","hashOfConfig":"41"},{"size":175,"mtime":1618764522146,"results":"72","hashOfConfig":"41"},{"size":614,"mtime":1618683286802,"results":"73","hashOfConfig":"41"},{"size":1477,"mtime":1618716237936,"results":"74","hashOfConfig":"41"},{"size":718,"mtime":1618717713327,"results":"75","hashOfConfig":"41"},{"size":952,"mtime":1618696370353,"results":"76","hashOfConfig":"41"},{"size":277,"mtime":1618683286803,"results":"77","hashOfConfig":"41"},{"size":8124,"mtime":1618687550842,"results":"78","hashOfConfig":"41"},{"size":284,"mtime":1618717187471,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ayb99d",{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/index.js",[],["174","175"],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/App.js",["176","177","178"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport fire from \"./fire\";\nimport Nav from './components/Nav'\nimport Sidebar from './components/Sidebar'\nimport Homepage from './pages/Homepage'\nimport BrowseSurveys from './pages/BrowseSurveys'\nimport EditProfile from \"./pages/EditProfile\";\nimport ViewResults from './pages/ViewResults'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport StartPage from \"./pages/StartPage\";\nimport TakeSurvey from \"./pages/TakeSurvey\";\nimport SurveyCreator from \"./creating_surveys/SurveyCreator\";\n\n\n\nfunction App() {\n\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const [hasAccount, setHasAccount] = useState(false)\n\n    const [userName, setUserName] = useState('')\n\n\n    const clearInputs = () => {\n        setUserName('');\n        setEmail('');\n        setPassword('');\n    }\n\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    }\n\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    }\n\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                userCredential.user.updateProfile({\n                    displayName: userName,\n                    photoURL: null,\n                })\n            })\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n        console.log(user);\n    }\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                clearInputs();\n                setUser(user);\n                console.log(user)\n\n            } else {\n                setUser(\"\")\n            }\n        });\n    };\n\n    useEffect(() => {\n        authListener(); //listen for state change\n    }, []);\n\n\n    return (\n        <div className=\"App\">\n            {user ? (\n                <section className=\"hero\">\n                    <Nav handleLogout={handleLogout} className=\"topNav\"/>\n                    <div className=\"page\">\n                        <Router>\n                            <Sidebar className=\"sideBarLeft\" user={user}/>\n                            <Switch >\n                                <Route path=\"/Homepage\"  component={Homepage} />\n                                <Route path=\"/BrowseSurveys\" component={BrowseSurveys}/>\n                                <Route path=\"/TakeSurvey\" component={TakeSurvey}/>\n                                <Route path=\"/CreateSurvey\" component={SurveyCreator}/>\n                                <Route path=\"/EditProfile\" render={() => (\n                                    <EditProfile user={user}/>\n                                )}/>\n                                <Route path=\"/ViewResults\" component={ViewResults}/>\n                            </Switch>\n                        </Router>\n                    </div>\n                </section>\n\n            ) : (\n\n                <div>\n\n                    <StartPage\n                        email={email}\n                        setEmail={setEmail}\n                        password={password}\n                        setPassword={setPassword}\n                        handleLogin={handleLogin}\n                        handleSignup={handleSignup}\n                        hasAccount={hasAccount}\n                        setHasAccount={setHasAccount}\n                        emailError={emailError}\n                        passwordError={passwordError}\n\n                        userName={userName}\n                        setUserName={setUserName}\n                        //setAgreed = {setAgreed}\n                    />\n                </div>\n            )}\n        </div>\n    );\n\n}\n\nexport default App;\n","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/fire.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Nav.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/Homepage.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/Sidebar.js",["179","180"],"import React, {useState, useEffect} from \"react\";\nimport \"./Sidebar.css\";\nimport {SidebarData} from './SidebarData'\nimport {Link} from 'react-router-dom'\nimport firebase from \"firebase\"\nimport ProfilePic from \"./ProfilePic\";\nimport Auth from \"firebase\";\n\n//https://www.youtube.com/watch?v=5R9jFHlG6ik&ab_channel=PedroTech -> css\n//https://www.youtube.com/watch?v=Law7wfdg_ls&ab_channel=DevEd -> routing\n//https://www.youtube.com/watch?v=CXa0f4-dWi4&ab_channel=BrianDesign -> using routing for sidebar\n//https://firebase.google.com/docs/storage/web/download-files -> taking stuff from firebasestorage\n\n\nfunction Sidebar(props) {\n    let user = Auth.auth().currentUser\n\n\n    const [currentPage, setCurrentPage] = useState(\"/Homepage\");\n    return (\n        <div className=\"Sidebar\">\n            <div className=\"profile\">\n                <ProfilePic user={user} className={\"profilePic\"}/>\n                <h3>{user.displayName}</h3>\n                <br/><br/>\n                <Link to=\"/EditProfile\" className=\"editProfileButton\">Edit Profile</Link>\n            </div>\n\n            <ul className='SidebarList'>\n                {SidebarData.map((item, index) => {\n                    return (\n                        <li key={index} onClick={() => setCurrentPage(item.path)}\n                            className={item.path === currentPage ? \"rowClicked\" : \"row\"}>\n                            <Link to={item.path}>\n                                <span id=\"icon\">{item.icon}</span>\n                                <span id=\"title\">{item.title}</span>\n                            </Link>\n                        </li>\n                    )\n                })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Sidebar\n\n","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/ViewResults.js",["181"],"import SurveyAdmin from '../survey_display/SurveyAdmin';\nimport firebase from \"firebase\";\n\nfunction ViewResults() {\n    let url = window.location.pathname;\n\n    let uniqueID = url.split(\"/\")[2];\n\n    return (\n        <div className=\"surveyResults\">\n            <SurveyAdmin uniqueID={uniqueID}/>\n        </div>\n    )\n}\n\nexport default ViewResults;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/TakeSurvey.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/EditProfile.js",["182","183","184","185","186","187","188","189","190","191"],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/StartPage.js",["192"],"import React, {useState, useEffect} from \"react\";\nimport TextBox from '../components/TextBox';\nimport PopUp from '../components/PopUp';\nimport PopUpText from \"../components/PopUpText\";\n\nconst StartPage = (props) => {\n    const [visibility, setVisiblity] = useState(\"password\")\n    const [popUpSeen, setPopUpSeen] = useState(false);\n\n    // referenced https://www.w3schools.com/howto/howto_js_toggle_password.asp\n\n    function toggleVisibility() {\n        if (visibility === \"password\") {\n            setVisiblity(\"text\");\n        } else {\n            setVisiblity(\"password\");\n        }\n    }\n\n    const [agreed, setAgreed] = useState(false)\n    const [agreedError, setAgreedError] = useState('')\n\n    // decompose props\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError,\n\n        userName,\n        setUserName,\n    } = props;\n\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {hasAccount ?\n                    (<h1>Sign In</h1>) :\n                    (<>\n                        <h1>Sign Up</h1>\n                        <hr/>\n                        <br></br>\n                        <TextBox type={\"text\"} label={\"Name\"} focus={true} value={userName} change={setUserName}/>\n                    </>)\n                }\n                <br></br>\n                <TextBox type={\"text\"} label={\"Username/Email\"} focus={hasAccount ? true : false} value={email}\n                         change={setEmail}/>\n                <p className=\"errorMsg\">{emailError}</p>\n                <TextBox type={visibility} label={\"Password\"} focus={false} value={password} change={setPassword}/>\n                <p className=\"errorMsg\">{passwordError}</p>\n                <br/>\n                <div className=\"small\">\n                    Show Password: <input type=\"checkbox\" id=\"showPassword\" onClick={() => toggleVisibility()}/>\n                </div>\n                {hasAccount ?\n                    (<div className=\"btnContainer\">\n                        <>\n                            <button onClick={handleLogin}>Sign in</button>\n                            <p>\n                                Don't have an account ?\n                                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\n                            </p>\n                        </>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"agreePrivacyContainer\">\n                                I accept the\n                                <span onClick={() => setPopUpSeen(true)} className=\"hoverChange\" id=\"fakeSpace\"><u> Privacy Policy:  </u> </span>\n                                <input type=\"checkbox\" id=\"agreePrivacy\" onClick={() => setAgreed(!agreed)}/>\n                                {popUpSeen === true ? <PopUp toggle={setPopUpSeen} content={PopUpText()}/> : null}\n                            </div>\n\n\n                            <div className=\"btnContainer\">\n                                <button\n                                    onClick={() => agreed ? handleSignup() : setAgreedError(\"Agree to the privacy policy to create an account\")}>Sign\n                                    up\n                                </button>\n                                <p>\n                                    Have an account ?\n                                    <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\n                                </p>\n                            </div>\n                            <p className=\"errorMsg\">{agreed ? \"\" : agreedError}</p>\n                        </>\n                    )\n                }\n            </div>\n        </section>\n    )\n}\n\nexport default StartPage;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/SurveyCreator.js",["193","194"],"import React, {useState, useEffect} from 'react';\nimport { firestore } from \"firebase\";\nimport firebase from \"firebase\";\nimport NewQuestionButton from \"./NewQuestionButton\";\nimport QuestionEntry from \"./QuestionEntry\";\nimport SurveyInfoBox from \"./SurveyInfoBox\";\nimport GeneratedLink from \"./GeneratedLink\";\nimport \"./SurveyCreator.css\"\n\n//TODO: delete a question or option\n\nfunction SurveyCreator() {\n    const [questions, setQuestions] = useState([\"\"]);\n    const [error, setError] = useState(\"\");\n    const [inputTitle, setTitle] = useState(\"\");\n    const [descr, setDescr] = useState(\"\");\n    const [customURL, setCustomUrl] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n    const [questionOptions, setQuestionOptions] = useState([[\"\"]]);\n    const [questionImportance, setQuestionImportance] = useState([]);\n\n    const db = firebase.firestore();\n\n    // make a new question\n    const addAQuestion = () => {\n        setQuestions(questions => [...questions, \"\"]);\n        setQuestionOptions(questionOptions => [...questionOptions, [\"\"]]);\n        console.log(questions);\n    }\n\n    // add an answer to a question\n    const addOption = (qid) => {\n        console.log(questionOptions);\n        let copy = [...questionOptions];\n        copy[qid].push(\"\");\n        setQuestionOptions(copy);\n    }\n\n    const changeQuestionContent = async (id, text) => {\n        questions[id] = text;\n        // setQuestions(questions);\n    }\n\n    const changeAnswerContent = async (qid, ansid, text) => {\n        questionOptions[qid][ansid] = text;\n        // setQuestionOptions(questionOptions);\n    }\n\n    const changeImportance = async (qid, imp) => {\n        questionImportance[qid] = imp;\n    }\n\n    const submitSurvey = async () => {\n        // copy inputs to make sure user can't change them\n        let submittedQs = [...questions];\n        let submittedFields = [...questionOptions];\n        let submittedImp = [...questionImportance];\n\n        // check if all fields are filled\n\n        let noEmptyFields = true;\n        for(let i = 0; i < submittedQs.length; i++) {\n            if(submittedQs[i] === \"\") {\n                noEmptyFields = false;\n            }\n        }\n\n        for(let i = 0; i < submittedFields.length; i++) {\n            for(let j = 0; j < submittedFields[i].length; j++) {\n                if(submittedFields[i][j] === \"\") {\n                    noEmptyFields = false;\n                }\n            }\n        }\n\n        for(let i = 0; i < submittedImp.length; i++) {\n            if(submittedImp === \"\") {\n                noEmptyFields = false;\n            }\n        }\n\n        if(inputTitle === \"\" || descr === \"\") {\n            noEmptyFields = false;\n        }\n\n        if(noEmptyFields) {\n            // if valid, submit to firebase\n            // make a new survey collection\n            await db.collection(\"surveys\").add({\n                creator : firebase.auth().currentUser.uid,\n                description : descr,\n                title: inputTitle\n            }).then(docRef => {\n                console.log(\"survey added with ID: \", docRef.id);\n                setCustomUrl(docRef.id);\n                // add each question to the db\n                for(let i = 0; i < submittedQs.length; i++) {\n                    db.collection(\"surveys\").doc(docRef.id).collection(\"questions\").add({\n                        importance: submittedImp[i],\n                        questionnumber: i,\n                        options: submittedFields[i],\n                        question: questions[i]\n                    })\n                }\n                setSubmitted(true);\n                setError(\"Successfully submitted survey!\");\n\n            }).catch(error => {console.error(\"Error adding document: \", error);\n                setError(\"Error submitting questions\")});\n\n\n        } else {\n            setError(\"Please fill in all fields before submitting!\");\n        }\n\n\n    }\n\n    const updateDesc = (newDesc) => {\n        setDescr(newDesc);\n    }\n\n    const updateTitle = (newTitle) => {\n        setTitle(newTitle);\n    }\n\n    // on page load, make one question\n    useEffect( () => {\n\n    }, [])\n\n    return(<div className=\"surveyMaker\">\n        <div className=\"surveyCreatorTitle\"><h1>Create a Survey!</h1></div>\n        <h3>Survey Name:</h3>\n        <SurveyInfoBox className=\"nameBox\" placeholder=\"survey name\" change={updateTitle}/>\n        <h3>Survey Description:</h3>\n        <SurveyInfoBox className=\"descBox\" placeholder=\"survey description\" change={updateDesc}/>\n        <h3>Questions:</h3>\n        {questions.map((q, qid) =>\n            <QuestionEntry id={qid} options={questionOptions[qid]} addAnswer={addOption} change={changeQuestionContent}\n                           changeAnswer={changeAnswerContent} changeImp={changeImportance}/>)}\n        <NewQuestionButton addQuestion={addAQuestion}/>\n        <button className=\"submitButton\" type=\"button\" onClick={submitSurvey}>submit</button>\n        {error}\n        <GeneratedLink madeLink={submitted} link={\"localhost:3000/TakeSurvey/\" + customURL} shortlink={\"TakeSurvey/\" + customURL}/>\n\n    </div>);\n\n}\n\nexport default SurveyCreator;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Survey.js",["195","196","197","198"],"import Question from \"./Question\";\nimport React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport firebase from \"firebase\";\nimport axios from \"axios\";\nimport fire from '../fire'\nimport \"./Survey.css\"\n\nfunction Survey(props) {\n    const [title, setTitle] = useState(\"loading...\");\n    const [surveyCreator, setCreator] = useState(\"\"); // use this to check if button should show up\n    const [description, setDescription] = useState(\"almost there...\");\n    const [questions, setQuestions] = useState([]);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [error, setError] = useState(\"\");\n\n\n    const db = firebase.firestore();\n    const currentPoll = props.uniqueID;\n\n    const loadSurvey = async () => {\n        const doc = await db.collection(\"surveys\").doc(currentPoll).get();\n        setTitle(doc.data().title);\n        setCreator(doc.data().creator); // sets creator --> if current user matches this, display button to get results\n        setDescription(doc.data().description);\n        const ndoc = await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get();\n        await setQuestions(ndoc.docs.map(d => d.data()));\n        let answers = new Array(ndoc.docs.length);\n        // store answer as -1 if user hasn't answered\n        console.log(answers.length);\n        for (let i = 0; i < answers.length; i++) {\n            answers[i] = -1;\n        }\n        setUserAnswers(answers);\n\n        if ((await\n            db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").doc(firebase.auth()\n                .currentUser.uid).get()).exists) {\n            document.getElementById(\"linkToCheckResults\").style.visibility = \"visible\";\n        }\n    }\n\n    const sendResults = async () => {\n        // make a new document for submitting\n\n        // makes the document id the same as the user id and also overrides previous changes if the user\n        // submits twice\n        let responsesRef = db.collection(\"surveys\").doc(currentPoll).collection(\"responses\");\n\n        await responsesRef.doc(firebase.auth().currentUser.uid).set({\n            userID: firebase.auth().currentUser.uid,\n            email: firebase.auth().currentUser.email,\n            name: firebase.auth().currentUser.displayName,\n            responses: userAnswers\n        }).then(() => {\n            setError(\"Successfully submitted survey response!\");\n\n            document.getElementById(\"linkToCheckResults\").style.visibility = \"visible\";\n            alert(\"Successfully submitted survey response!\");\n\n            console.log(\"submitted survey response!\");\n\n        }).catch((error) => {\n            console.error(\"Error making survey: \", error);\n            setError(\"Error submitting survey: \" + error);\n        });\n\n        // should we add a timestamp?\n    }\n\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadSurvey();\n    }, [])\n\n\n    // set ID, used in child component\n    const setAnswerFromChild = (questionID, answer) => {\n        if (userAnswers) {\n            userAnswers[questionID] = answer;\n        }\n    }\n\n    // attempt to submit survey\n    const submitSurvey = () => {\n        console.log(userAnswers);\n\n        // make sure each answer isn't null\n        let valid = true;\n        for (let i = 0; i < userAnswers.length; i++) {\n            if (userAnswers[i] === -1) {\n                valid = false;\n            }\n        }\n\n\n        if (valid) {\n            console.log(\"attemp ting to submit...\");\n            sendResults();\n        } else {\n            console.log(\"you didn't pick answer choices :(\");\n            setError(\"Please answer every question!\");\n        }\n    }\n\n    // checking if user is admin is hard coded in --> will be used to display button for survey results.\n    console.log(db.collection(\"surveys\").doc(currentPoll).id)\n    return (<div className=\"div1\">\n            <div className=\"poll\">\n                <div className=\"surveyInfo\">\n                    <h1>{title}</h1>\n                    <p>{description}</p>\n                </div>\n                {questions.map((q, qid) =>\n                    <Question options={q.options} question={q.question} id={qid} onSelect={setAnswerFromChild}/>\n                )}\n                <button type=\"button\" onClick={submitSurvey}>submit</button>\n                {error}\n            </div>\n            <div id=\"linkToCheckResults\">\n                <Link to={`/ViewResults/${currentPoll}`} className=\"poll\">Check Results</Link>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Survey;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/NewSurvey.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/SidebarData.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayHomeSurveys.js",["199","200","201","202","203"],"import React, {useState, useEffect, useRef} from 'react'\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplayCreatorSurvey from \"./DisplayCreatorSurvey\";\n\nfunction DisplayHomeSurveys() {\n    const [allSurveys, setSurveys] = useState([])\n    const db = firebase.firestore();\n\n    // load in all the surveys.\n    const loadInfo = async () => {\n        let temp = []\n        // Print each document\n        const data = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(firebase.auth().currentUser.uid === doc.data().creator)\n                temp.push(doc)\n            })\n            setSurveys(temp)\n        });\n    }\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadInfo();\n    }, [])\n\n\n    return (\n        <div className=\"surveyData\">\n            {allSurveys.map((s) => {\n                return (<DisplayCreatorSurvey data={s.data()} link={s.id}/>);\n            })}\n        </div>\n    )\n\n}\n\nexport default DisplayHomeSurveys;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/PopUp.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/ProfilePic.js",["204","205"],"import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\n\nconst ProfilePic = (props) => {\n    const user = props.user;\n    const [imageUrl, setImageUrl] = useState(user.photoURL);\n\n\n    let storage = firebase.storage();\n    // Create a reference to the file we want to download\n    let gsReference = storage.refFromURL('gs://short-demo-login.appspot.com/default_profile.png');\n\n\n    const setDefaultImage = () => {\n        gsReference.getDownloadURL()\n            .then((url) => {\n                setImageUrl(url);\n                user.updateProfile({\n                    photoURL: url       // <- URL from uploaded photo.\n                }).then(r => {\n                    console.log(r);\n                });\n            })\n            .catch((error) => {\n                // A full list of error codes is available at\n                // https://firebase.google.com/docs/storage/web/handle-errors\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        // File doesn't exist\n                        console.log(error.code + \"File doesn't exist\")\n                        break;\n                    case 'storage/unauthorized':\n                        // User doesn't have permission to access the object\n                        console.log(error.code + \": User doesn't have permission to access the object\")\n                        break;\n                    case 'storage/canceled':\n                        // User canceled the upload\n                        console.log(error.code + \": User canceled the upload\")\n                        break;\n                    case 'storage/unknown':\n                        // Unknown error occurred, inspect the server response\\\n                        console.log(error.code + \": Unknown error occurred, inspect the server response\")\n                        break;\n                }\n            });\n    }\n\n    useEffect(() => {\n            if (imageUrl) {\n                setImageUrl(imageUrl);\n            } else {\n                setImageUrl(setDefaultImage());\n            }\n        }\n        , [imageUrl]);\n\n    return (\n        <img src={imageUrl} alt=\"Profile-pic could not load\" className={props.className}/>\n    )\n}\n\nexport default ProfilePic","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayAllSurvey.js",["206","207","208","209","210"],"import React, {useState, useEffect, useRef} from 'react'\nimport Survey from \"./Survey\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport DisplaySurvey from \"./DisplaySurvey\";\nimport \"./Survey.css\"\n\nfunction DisplayAllSurvey() {\n    const [allSurveys, setSurveys] = useState([])\n    const db = firebase.firestore();\n\n    // load in all the surveys.\n    const loadInfo = async () => {\n        let temp = []\n        // Print each document\n        const data = await db.collection(\"surveys\").onSnapshot((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                temp.push(doc)\n            })\n            setSurveys(temp)\n        });\n    }\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadInfo();\n    }, [])\n\n\n        return (\n            <div className=\"homeSurveys\">\n                {allSurveys.map((s) => {\n                    return (<DisplaySurvey data={s.data()} link={s.id}/>);\n                })}\n            </div>\n        )\n\n}\n\nexport default DisplayAllSurvey;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/TextBox.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/SurveyAdmin.js",["211"],"import DisplayPerson from \"./DisplayPerson\";\nimport DisplayPair from \"./DisplayPair.js\";\nimport React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport UserDisplayPair from \"./UserDisplayPair\";\n\nfunction SurveyAdmin(props) {\n    const [surveyCreator, setCreator] = useState(\"\"); // use this to check if button should show up\n\n    const [displayResults, setDisplayResults] = useState(false);\n    const [title, setTitle] = useState(\"loading...\");\n    const [results, setResults] = useState([])\n    const [pairs, setPairs] = useState({})\n\n    const [userData, setUserData] = useState({});\n    const [partnerData, setPartnerData] = useState({});\n\n    const [idToName, setIDToName] = useState({});\n\n    const db = firebase.firestore();\n\n    const currentPoll = props.uniqueID;\n\n    // on page load, load in the survey\n    useEffect(() => {\n        loadInfo();\n        updateDisplayResults().then(results => {\n            if (results) {\n                // initializes the pairs for users if they're ready\n                db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n                    .doc(\"generatedPairs\").get().then(d => {\n                    let pairs = d.data();\n\n                    const currUser = firebase.auth().currentUser.uid;\n\n                    let partner = pairs.pairs[currUser];\n\n                    db.collection(\"surveys\").doc(currentPoll).collection(\"responses\")\n                        .doc(partner).get().then(a =>\n                        setPartnerData(a.data()));\n\n                    db.collection(\"surveys\").doc(currentPoll).collection(\"responses\")\n                        .doc(currUser).get().then(a =>\n                        setUserData(a.data()))\n                })\n            }\n            setDisplayResults(results);\n        })\n    }, [])\n\n\n    const generatePairs = async () => {\n        let allQuestions = (await db.collection(\"surveys\").doc(currentPoll).collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data());\n        let answers = (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data());\n\n        // assumes that responses array has the index represent question id and value represent which answer\n        // was picked\n        const toSend = {\n            questions: allQuestions,\n            answers: answers\n        };\n\n        console.log(answers);\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        };\n\n        axios.post(\n            \"http://localhost:4567/match\",\n            toSend,\n            config\n        ).then(async response =>  {\n            console.log(response.data)\n            setPairs(response.data[\"pairs\"])\n\n            await db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n                .doc(\"generatedPairs\").set(\n                    {pairs: response.data[\"pairs\"]}\n                )\n\n            let idToNameTemp = {};\n            for (const [key, value] of Object.entries(response.data[\"pairs\"])) {\n                let nameKey = await getNameFromUserID(key);\n                let nameValue = await getNameFromUserID(value);\n                idToNameTemp[nameKey] = nameValue;\n            }\n\n            console.log(idToNameTemp);\n            setIDToName(idToNameTemp);\n\n            alert(\"Successfully generated pairs!\");\n        }).catch(error => {\n            console.log(error);\n            alert(\"Oops, something went wrong.\");\n        });\n    }\n\n    // sets any info needed for survey\n    const loadInfo = async () => {\n        const doc = await db.collection(\"surveys\").doc(currentPoll).get();\n        setCreator(doc.data().creator); // sets creator --> if current user matches this, display button to get results\n        setTitle(doc.data().title);\n        let temp = []\n        const responses =\n            (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\").orderBy(\"userID\").get()).docs.map(d => d.data());\n        responses.forEach(user => {\n            temp.push(user)\n        })\n\n        setResults(temp)\n    }\n\n    const updateDisplayResults = async () => {\n        return await db.collection(\"surveys\").doc(currentPoll).collection(\"pairs\")\n            .doc(\"generatedPairs\").get()\n            .then(a => a.get(\"pairs\") !== undefined).catch(error =>\n                console.log(error));\n    }\n\n    const deleteSurvey = () => {\n        let input = prompt(\"Type DELETE to delete this survey.\");\n        if (input === \"DELETE\") {\n            const thisSurvey = db.collection(\"surveys\").doc(currentPoll);\n\n            // apparently this doesn't delete subcollections so welp\n            thisSurvey.delete().then(x => {\n                alert(\"Survey Successfully Deleted!\")\n                window.location.replace(\"http://localhost:3000/Homepage\")\n            });\n        }\n    }\n\n    const deleteResponse = () => {\n        let input = prompt(\"Type DELETE to delete your response to this survey.\");\n        if (input === \"DELETE\") {\n            const userResponseRef = db.collection(\"surveys\").doc(currentPoll).collection(\"responses\")\n                .doc(firebase.auth().currentUser.uid);\n\n            // apparently this doesn't delete subcollections so welp\n            userResponseRef.delete().then(x => {\n                alert(\"Survey Successfully Deleted!\")\n                window.location.replace(\"http://localhost:3000/Homepage\")\n            });\n        }\n    }\n\n    const getNameFromUserID = async (userID) => {\n        return (await db.collection(\"surveys\").doc(currentPoll).collection(\"responses\")\n            .doc(userID).get()).get(\"name\");\n    }\n\n    if (surveyCreator === firebase.auth().currentUser.uid) {\n        console.log(\"in admin\");\n        return (\n            <div className=\"poll\">\n                <h1>{title}</h1>\n                <button>Current Survey Results</button>\n                <div>\n                    {results && results.map(user => {\n                        return (<DisplayPerson\n                            name={user.name}\n                        />);\n                    })}\n                </div>\n                <button type=\"button\" onClick={generatePairs}>Click for Pairs</button>\n                <div>\n                    {pairs && Object.entries(idToName).map(([key, value]) => {\n                        return (<DisplayPair\n                            user1={key}\n                            user2={value}\n                        />);\n                    })}\n                </div>\n                <button type=\"button\" onClick={deleteSurvey}>Delete This Survey</button>\n            </div>\n        );\n    } else {\n\n        // only displays results when everything is ready\n        if (displayResults && partnerData !== undefined && Object.keys(partnerData).length !== 0) {\n            console.log(pairs)\n            return (\n                <div className=\"poll\">\n                    <h1>{title}</h1>\n\n                    <UserDisplayPair\n                        userData={userData}\n                        partnerData={partnerData}\n                        db={db}\n                        currPoll={currentPoll}\n                    />\n\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"poll\">\n                    <h1>{title}</h1>\n                    <div>\n                        Survey Results Aren't Ready Yet!\n                    </div>\n\n\n                    <button typeof=\"button\" onClick={deleteResponse}>Delete Response</button>\n                </div>\n            );\n        }\n    }\n\n}\n\n\nexport default SurveyAdmin;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/NewQuestionButton.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/QuestionEntry.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/GeneratedLink.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Question.js",["212"],"import Option from \"./Option\";\nimport React, {useState, useEffect} from 'react';\n\n\nfunction Question(props) {\n\n    const[selectedOption, setSelectedOption] = useState(-1);\n\n    // set ID, used in child component\n    const setAnswer = (answer) => {\n        setSelectedOption(answer);\n        props.onSelect(props.id, answer);\n    }\n\n\n    return (\n        <div className=\"question\" >\n            <div className=\"theQuestion\">\n                {props.question}\n            </div>\n            {props.options.map((item, index) =>\n                <Option id={index} option={item} onSelected={setAnswer} highlighted={selectedOption}/>\n            )}\n        </div>\n    );\n}\n\nexport default Question;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/SurveyInfoBox.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayPair.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayPerson.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplaySurvey.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/DisplayCreatorSurvey.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/UserDisplayPair.js",["213","214","215"],"import firebase from \"firebase\";\nimport {useEffect, useState} from \"react/cjs/react.production.min\";\nimport './Results.css';\nimport ViewOnlySurvey from \"./ViewOnlySurvey\";\n\nfunction UserDisplayPair(props) {\n    console.log(props.partnerData);\n    return (\n        <div className=\"partner\">\n            <div className=\"partner-name\">\n                <strong>You've been paired with {props.partnerData.name}!</strong>\n                <br/>\n                <div className=\"partner-email\">\n                    Email them at {props.partnerData.email}\n                </div>\n            </div>\n\n            <div className=\"compare-answers\">\n                <ViewOnlySurvey userData={props.userData} partnerData={props.partnerData} currPoll={props.currPoll}/>\n            </div>\n        </div>\n    );\n}\n\nexport default UserDisplayPair;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/AnswerBox.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/creating_surveys/NewAnswerButton.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/Option.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlySurvey.js",["216","217","218","219","220","221","222","223"],"import Option from \"./Option\";\nimport React, {useEffect, useState} from \"react\";\nimport firebase from \"firebase\";\nimport Question from \"./Question\";\nimport {Link} from \"react-router-dom\";\n\nimport ViewOnlyQuestion from \"./ViewOnlyQuestion\";\nimport ResponseComparison from \"./ResponseComparison\";\n\nfunction ViewOnlySurvey(props) {\n    const [description, setDescription] = useState(\"almost there...\");\n    const [questions, setQuestions] = useState([]);\n\n    const [error, setError] = useState(\"\");\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        getSurveyInfoFromDatabase();\n    }, [])\n\n    const getSurveyInfoFromDatabase = async () => {\n        let currentSurveyRef = db.collection(\"surveys\").doc(props.currPoll);\n\n        setQuestions((await currentSurveyRef.collection(\"questions\").orderBy(\"questionnumber\").get()).docs.map(d => d.data()));\n    }\n\n    return (\n        <div className=\"surveyContainer\">\n            <div className=\"poll\">\n                <div className=\"surveyInfo\">\n                    <h1>Response Comparison</h1>\n                    <p>{description}</p>\n                </div>\n                {questions.map((q, qid) =>\n                    <ViewOnlyQuestion\n                        userData={props.userData} partnerData={props.partnerData}\n                        options={q.options} question={q.question} questionNumber={q.questionnumber}/>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default ViewOnlySurvey;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ResponseComparison.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlyQuestion.js",["224","225"],"import React, {useState} from \"react\";\nimport Option from \"./Option\";\nimport ViewOnlyOption from \"./ViewOnlyOption\";\n\nfunction ViewOnlyQuestion(props) {\n    const userResponse = props.options[props.userData.responses[props.questionNumber]];\n    const partnerResponse = props.options[props.partnerData.responses[props.questionNumber]];\n\n    console.log(props.userData);\n    console.log(props.partnerData);\n    console.log(props.questionNumber);\n    return (\n        <div className=\"question\" >\n            <div className=\"theQuestion\">\n                {props.question}\n            </div>\n            {props.options.map((item, index) =>\n                <ViewOnlyOption id={index} option={item}/>\n            )}\n\n            <div>\n                You picked: {userResponse}\n            </div>\n\n            <div>\n                {props.partnerData.name} picked: {partnerResponse}\n            </div>\n        </div>\n    );\n}\n\nexport default ViewOnlyQuestion;","/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/survey_display/ViewOnlyOption.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/components/PopUpText.js",[],"/Users/mandyhe/cs0320/term-project-awhite35-mcamach6-mhe26-pmontei1/frontend/src/pages/BrowseSurveys.js",["226","227"],"import React, {useState, useEffect} from 'react'\nimport DisplayAllSurvey from \"../survey_display/DisplayAllSurvey\";\n\nfunction BrowseSurveys() {\n    return (\n        <div className=\"surveysContainer\">\n            <DisplayAllSurvey/>\n        </div>\n    )\n}\n\nexport default BrowseSurveys",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":48,"column":17,"nodeType":"234","messageId":"235","endLine":57,"endColumn":18},{"ruleId":"232","severity":1,"message":"233","line":74,"column":17,"nodeType":"234","messageId":"235","endLine":82,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":106,"column":8,"nodeType":"238","endLine":106,"endColumn":10,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":35},{"ruleId":"240","severity":1,"message":"244","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"244","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":35},{"ruleId":"240","severity":1,"message":"245","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"246","line":7,"column":9,"nodeType":"242","messageId":"243","endLine":7,"endColumn":17},{"ruleId":"240","severity":1,"message":"247","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":19,"column":12,"nodeType":"242","messageId":"243","endLine":19,"endColumn":21},{"ruleId":"240","severity":1,"message":"249","line":24,"column":12,"nodeType":"242","messageId":"243","endLine":24,"endColumn":21},{"ruleId":"240","severity":1,"message":"250","line":24,"column":23,"nodeType":"242","messageId":"243","endLine":24,"endColumn":35},{"ruleId":"240","severity":1,"message":"251","line":29,"column":11,"nodeType":"242","messageId":"243","endLine":29,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":136,"column":21,"nodeType":"234","messageId":"235","endLine":140,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":156,"column":21,"nodeType":"234","messageId":"235","endLine":162,"endColumn":22},{"ruleId":"240","severity":1,"message":"241","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":35},{"ruleId":"240","severity":1,"message":"252","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":19},{"ruleId":"240","severity":1,"message":"253","line":20,"column":32,"nodeType":"242","messageId":"243","endLine":20,"endColumn":53},{"ruleId":"240","severity":1,"message":"254","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":13},{"ruleId":"240","severity":1,"message":"255","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":12},{"ruleId":"240","severity":1,"message":"256","line":11,"column":12,"nodeType":"242","messageId":"243","endLine":11,"endColumn":25},{"ruleId":"236","severity":1,"message":"257","line":75,"column":8,"nodeType":"238","endLine":75,"endColumn":10,"suggestions":"258"},{"ruleId":"240","severity":1,"message":"259","line":1,"column":37,"nodeType":"242","messageId":"243","endLine":1,"endColumn":43},{"ruleId":"240","severity":1,"message":"260","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":16},{"ruleId":"240","severity":1,"message":"262","line":15,"column":15,"nodeType":"242","messageId":"243","endLine":15,"endColumn":19},{"ruleId":"236","severity":1,"message":"263","line":27,"column":8,"nodeType":"238","endLine":27,"endColumn":10,"suggestions":"264"},{"ruleId":"232","severity":1,"message":"233","line":27,"column":17,"nodeType":"234","messageId":"235","endLine":44,"endColumn":18},{"ruleId":"236","severity":1,"message":"265","line":55,"column":11,"nodeType":"238","endLine":55,"endColumn":21,"suggestions":"266"},{"ruleId":"240","severity":1,"message":"259","line":1,"column":37,"nodeType":"242","messageId":"243","endLine":1,"endColumn":43},{"ruleId":"240","severity":1,"message":"260","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":16},{"ruleId":"240","severity":1,"message":"262","line":16,"column":15,"nodeType":"242","messageId":"243","endLine":16,"endColumn":19},{"ruleId":"236","severity":1,"message":"263","line":27,"column":8,"nodeType":"238","endLine":27,"endColumn":10,"suggestions":"267"},{"ruleId":"236","severity":1,"message":"268","line":50,"column":8,"nodeType":"238","endLine":50,"endColumn":10,"suggestions":"269"},{"ruleId":"240","severity":1,"message":"241","line":2,"column":26,"nodeType":"242","messageId":"243","endLine":2,"endColumn":35},{"ruleId":"240","severity":1,"message":"244","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":2,"column":9,"nodeType":"242","messageId":"243","endLine":2,"endColumn":18},{"ruleId":"240","severity":1,"message":"270","line":2,"column":20,"nodeType":"242","messageId":"243","endLine":2,"endColumn":28},{"ruleId":"240","severity":1,"message":"271","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":16},{"ruleId":"240","severity":1,"message":"245","line":5,"column":9,"nodeType":"242","messageId":"243","endLine":5,"endColumn":13},{"ruleId":"240","severity":1,"message":"272","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":26},{"ruleId":"240","severity":1,"message":"273","line":11,"column":25,"nodeType":"242","messageId":"243","endLine":11,"endColumn":39},{"ruleId":"240","severity":1,"message":"274","line":14,"column":12,"nodeType":"242","messageId":"243","endLine":14,"endColumn":17},{"ruleId":"240","severity":1,"message":"275","line":14,"column":19,"nodeType":"242","messageId":"243","endLine":14,"endColumn":27},{"ruleId":"236","severity":1,"message":"276","line":19,"column":8,"nodeType":"238","endLine":19,"endColumn":10,"suggestions":"277"},{"ruleId":"240","severity":1,"message":"270","line":1,"column":16,"nodeType":"242","messageId":"243","endLine":1,"endColumn":24},{"ruleId":"240","severity":1,"message":"271","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"270","line":1,"column":16,"nodeType":"242","messageId":"243","endLine":1,"endColumn":24},{"ruleId":"240","severity":1,"message":"241","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":35},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["280"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'PopUpText' is defined but never used.","'newPicURL' is assigned a value but never used.","'deleteAcc' is assigned a value but never used.","'setDeleteAcc' is assigned a value but never used.","'db' is assigned a value but never used.","'firestore' is defined but never used.","'setQuestionImportance' is assigned a value but never used.","'axios' is defined but never used.","'fire' is defined but never used.","'surveyCreator' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSurvey'. Either include it or remove the dependency array.",["281"],"'useRef' is defined but never used.","'Survey' is defined but never used.","'Question' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadInfo'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'setDefaultImage'. Either include it or remove the dependency array.",["283"],["284"],"React Hook useEffect has missing dependencies: 'currentPoll', 'db', 'loadInfo', and 'updateDisplayResults'. Either include them or remove the dependency array.",["285"],"'useState' is defined but never used.","'Option' is defined but never used.","'ResponseComparison' is defined but never used.","'setDescription' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSurveyInfoFromDatabase'. Either include it or remove the dependency array.",["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"291","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [authListener]",{"range":"300","text":"301"},"Update the dependencies array to be: [loadSurvey]",{"range":"302","text":"303"},"Update the dependencies array to be: [loadInfo]",{"range":"304","text":"305"},"Update the dependencies array to be: [imageUrl, setDefaultImage]",{"range":"306","text":"307"},{"range":"308","text":"305"},"Update the dependencies array to be: [currentPoll, db, loadInfo, updateDisplayResults]",{"range":"309","text":"310"},"Update the dependencies array to be: [getSurveyInfoFromDatabase]",{"range":"311","text":"312"},[3015,3017],"[authListener]",[2930,2932],"[loadSurvey]",[843,845],"[loadInfo]",[2126,2136],"[imageUrl, setDefaultImage]",[774,776],[1835,1837],"[currentPoll, db, loadInfo, updateDisplayResults]",[601,603],"[getSurveyInfoFromDatabase]"]